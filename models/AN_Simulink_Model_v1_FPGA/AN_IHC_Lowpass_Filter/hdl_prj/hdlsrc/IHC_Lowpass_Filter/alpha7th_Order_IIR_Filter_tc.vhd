-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\IHC_Lowpass_Filter\alpha7th_Order_IIR_Filter_tc.vhd
-- Created: 2020-05-01 09:53:44
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha7th_Order_IIR_Filter_tc
-- Source Path: alpha7th_Order_IIR_Filter_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb         : 64x slower than clk with last phase
-- enb_1_1_1   : 64x slower than clk with phase 1
-- enb_64_1_0  : identical to clk_enable
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha7th_Order_IIR_Filter_tc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb                               :   OUT   std_logic;
        enb_1_1_1                         :   OUT   std_logic;
        enb_64_1_0                        :   OUT   std_logic
        );
END alpha7th_Order_IIR_Filter_tc;


ARCHITECTURE rtl OF alpha7th_Order_IIR_Filter_tc IS

  -- Signals
  SIGNAL count64                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL phase_0                          : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;
  SIGNAL phase_all                        : std_logic;

BEGIN
  Counter64 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count64 <= to_unsigned(1, 6);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count64 >= to_unsigned(63, 6) THEN
          count64 <= to_unsigned(0, 6);
        ELSE
          count64 <= count64 + to_unsigned(1, 6);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter64;

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_0 <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_0_tmp <= '1' WHEN count64 = to_unsigned(63, 6) AND clk_enable = '1' ELSE '0';

  temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  phase_1_tmp <= '1' WHEN count64 = to_unsigned(0, 6) AND clk_enable = '1' ELSE '0';

  phase_all <= '1' WHEN clk_enable = '1' ELSE '0';

  enb <=  phase_0 AND clk_enable;

  enb_1_1_1 <=  phase_1 AND clk_enable;

  enb_64_1_0 <=  phase_all AND clk_enable;


END rtl;

