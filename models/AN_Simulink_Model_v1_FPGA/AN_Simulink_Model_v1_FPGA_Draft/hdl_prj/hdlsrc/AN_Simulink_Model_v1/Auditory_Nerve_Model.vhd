-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\AN_Simulink_Model_v1\Auditory_Nerve_Model.vhd
-- Created: 2020-04-16 11:39:36
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 2.08333e-05
-- Target subsystem base rate: 2.08333e-05
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ihcout                        ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Auditory_Nerve_Model
-- Source Path: AN_Simulink_Model_v1/Auditory Nerve Model
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Auditory_Nerve_Model IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        stimulus                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ce_out                            :   OUT   std_logic;
        ihcout                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END Auditory_Nerve_Model;


ARCHITECTURE rtl OF Auditory_Nerve_Model IS

  -- Component Declarations
  COMPONENT Middle_Ear_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          stimulus                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          output                          :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT C2_Wideband_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          stimulus                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          output                          :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT C1_Chirp_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          meout                           :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          tauc1                           :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          output                          :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Subsystem
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          C2filterout                     :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          C1filterout                     :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          ihcout                          :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Middle_Ear_Filter
    USE ENTITY work.Middle_Ear_Filter(rtl);

  FOR ALL : C2_Wideband_Filter
    USE ENTITY work.C2_Wideband_Filter(rtl);

  FOR ALL : C1_Chirp_Filter
    USE ENTITY work.C1_Chirp_Filter(rtl);

  FOR ALL : Subsystem
    USE ENTITY work.Subsystem(rtl);

  -- Signals
  SIGNAL meout                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C2filterout                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant1_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C1filterout                      : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- IHC
  -- 
  -- Input sound pressure waveform passes through middle ear filter
  -- 
  -- Middle Ear output signal goes through broadly-tuned C2 filter and narrowly-tuned C1 filter in the model signal 
  -- pat
  -- 
  -- C1/C2-filtered signals pass through the inner hair cell model (IHC), resulting in a relative transmembrane potential 
  -- outpu

  u_Middle_Ear_Filter : Middle_Ear_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              stimulus => stimulus,  -- single
              output => meout  -- single
              );

  u_C2_Wideband_Filter : C2_Wideband_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              stimulus => meout,  -- single
              output => C2filterout  -- single
              );

  u_C1_Chirp_Filter : C1_Chirp_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              meout => meout,  -- single
              tauc1 => Constant1_out1,  -- single
              output => C1filterout  -- single
              );

  u_Subsystem : Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              C2filterout => C2filterout,  -- single
              C1filterout => C1filterout,  -- single
              ihcout => ihcout  -- single
              );

  Constant1_out1 <= X"3b449ba6";

  ce_out <= clk_enable;

END rtl;

