-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\redocking_site\ur_ear_fpga_sim_redocking_site_Xsum_Component.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_redocking_site_Xsum_Component
-- Source Path: redocking_site/Xsum Component
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_redocking_site_Xsum_Component IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        synout                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        nSites                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        reset_1                           :   IN    std_logic;
        increment                         :   IN    std_logic;
        Xsum                              :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_redocking_site_Xsum_Component;


ARCHITECTURE rtl OF ur_ear_fpga_sim_redocking_site_Xsum_Component IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_div_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_add_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_div_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_div_single(rtl);

  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_add_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_add_single(rtl);

  -- Signals
  SIGNAL Divide_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch2_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Add_out1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch2_out1_1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch1_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- Lines 592 and 626

  u_nfp_div_comp : ur_ear_fpga_sim_redocking_site_nfp_div_single
    PORT MAP( nfp_in1 => synout,  -- ufix32
              nfp_in2 => nSites,  -- ufix32
              nfp_out => Divide_out1  -- ufix32
              );

  u_nfp_add_comp : ur_ear_fpga_sim_redocking_site_nfp_add_single
    PORT MAP( nfp_in1 => Switch2_out1,  -- ufix32
              nfp_in2 => Divide_out1,  -- ufix32
              nfp_out => Add_out1  -- ufix32
              );

  Constant_out1 <= X"00000000";

  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Switch2_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Switch2_out1 <= Switch2_out1_1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  
  Switch1_out1 <= Switch2_out1 WHEN increment = '0' ELSE
      Add_out1;

  
  Switch2_out1_1 <= Switch1_out1 WHEN reset_1 = '0' ELSE
      Constant_out1;

  Xsum <= Switch2_out1_1;

END rtl;

