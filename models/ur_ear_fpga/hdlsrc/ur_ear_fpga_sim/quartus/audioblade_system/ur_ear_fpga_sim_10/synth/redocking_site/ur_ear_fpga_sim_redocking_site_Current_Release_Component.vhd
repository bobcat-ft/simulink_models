-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\redocking_site\ur_ear_fpga_sim_redocking_site_Current_Release_Component.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_redocking_site_Current_Release_Component
-- Source Path: redocking_site/Current Release Component
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_redocking_site_Current_Release_Component IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        previous_release_times            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        recalculate                       :   IN    std_logic;
        elapsed_time                      :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        t_rd_init                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        current_release_times             :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
        prev_times                        :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_redocking_site_Current_Release_Component;


ARCHITECTURE rtl OF ur_ear_fpga_sim_redocking_site_Current_Release_Component IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT initialize_signal
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          initalize                       :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_relop_double
    PORT( nfp_in1                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          nfp_in2                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          nfp_out1                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_add_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : initialize_signal
    USE ENTITY work.ur_ear_fpga_sim_initialize_signal_initialize_signal(rtl);

  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_relop_double
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_relop_double(rtl);

  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_add_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_add_single(rtl);

  -- Signals
  SIGNAL Initialization_Signal_out1       : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Switch_threshold                 : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Switch_control                   : std_logic;
  SIGNAL Add_out1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Delay_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch1_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Switch2_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Delay1_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- Line 603

  u_Initialization_Signal_block1 : initialize_signal
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              initalize => Initialization_Signal_out1  -- double
              );

  u_nfp_relop_comp : ur_ear_fpga_sim_redocking_site_nfp_relop_double
    PORT MAP( nfp_in1 => Initialization_Signal_out1,  -- ufix64
              nfp_in2 => Switch_threshold,  -- ufix64
              nfp_out1 => Switch_control
              );

  u_nfp_add_comp : ur_ear_fpga_sim_redocking_site_nfp_add_single
    PORT MAP( nfp_in1 => previous_release_times,  -- ufix32
              nfp_in2 => elapsed_time,  -- ufix32
              nfp_out => Add_out1  -- ufix32
              );

  Switch_threshold <= X"0000000000000000";

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  Switch1_out1 <= Delay_out1 WHEN recalculate = '0' ELSE
      Add_out1;

  
  Switch_out1 <= Switch1_out1 WHEN Switch_control = '0' ELSE
      t_rd_init;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Delay1_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  
  Switch2_out1 <= Delay1_out1 WHEN recalculate = '0' ELSE
      Delay_out1;

  current_release_times <= Switch_out1;

  prev_times <= Switch2_out1;

END rtl;

