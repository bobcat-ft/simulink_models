-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\redocking_site\ur_ear_fpga_sim_redocking_site_cal_trel_k.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_redocking_site_cal_trel_k
-- Source Path: redocking_site/cal_trel_k
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_redocking_site_cal_trel_k IS
  PORT( synout                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        trel                              :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        trel_k                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_redocking_site_cal_trel_k;


ARCHITECTURE rtl OF ur_ear_fpga_sim_redocking_site_cal_trel_k IS

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_mul_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_div_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_redocking_site_nfp_relop_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out1                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_mul_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_mul_single(rtl);

  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_div_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_div_single(rtl);

  FOR ALL : ur_ear_fpga_sim_redocking_site_nfp_relop_single
    USE ENTITY work.ur_ear_fpga_sim_redocking_site_nfp_relop_single(rtl);

  -- Signals
  SIGNAL kconst                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL K_out1                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Divide_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Min_stage1_sel                   : std_logic;
  SIGNAL Min_stage1_val                   : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- Line 616
  -- This was taken out of the if statement since the value is only used 
  -- when the other 'variables' are recalculated so this will be ready

  u_nfp_mul_comp : ur_ear_fpga_sim_redocking_site_nfp_mul_single
    PORT MAP( nfp_in1 => kconst,  -- ufix32
              nfp_in2 => trel,  -- ufix32
              nfp_out => K_out1  -- ufix32
              );

  u_nfp_div_comp : ur_ear_fpga_sim_redocking_site_nfp_div_single
    PORT MAP( nfp_in1 => K_out1,  -- ufix32
              nfp_in2 => synout,  -- ufix32
              nfp_out => Divide_out1  -- ufix32
              );

  u_nfp_relop_comp : ur_ear_fpga_sim_redocking_site_nfp_relop_single
    PORT MAP( nfp_in1 => Divide_out1,  -- ufix32
              nfp_in2 => trel,  -- ufix32
              nfp_out1 => Min_stage1_sel
              );

  kconst <= X"42c80000";

  
  Min_stage1_val <= Divide_out1 WHEN Min_stage1_sel = '0' ELSE
      trel;

  trel_k <= Min_stage1_val;

END rtl;

