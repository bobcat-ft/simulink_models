-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\c1_chirp_filter\ur_ear_fpga_sim_c1_chirp_filter_Calculate_C1filterout.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_c1_chirp_filter_Calculate_C1filterout
-- Source Path: c1_chirp_filter/Calculate C1filterout
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_c1_chirp_filter_Calculate_C1filterout IS
  PORT( C1filterouttmp                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        C1filterout                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_c1_chirp_filter_Calculate_C1filterout;


ARCHITECTURE rtl OF ur_ear_fpga_sim_c1_chirp_filter_Calculate_C1filterout IS

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_c1_chirp_filter_nfp_mul_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_c1_chirp_filter_nfp_mul_single
    USE ENTITY work.ur_ear_fpga_sim_c1_chirp_filter_nfp_mul_single(rtl);

  -- Signals
  SIGNAL kconst                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Gain_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_nfp_mul_comp : ur_ear_fpga_sim_c1_chirp_filter_nfp_mul_single
    PORT MAP( nfp_in1 => kconst,  -- ufix32
              nfp_in2 => C1filterouttmp,  -- ufix32
              nfp_out => Gain_out1  -- ufix32
              );

  kconst <= X"59f1801e";

  C1filterout <= Gain_out1;

END rtl;

