-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\c2_wideband_filter\ur_ear_fpga_sim_c2_wideband_filter_Calculate_C2filterout.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_c2_wideband_filter_Calculate_C2filterout
-- Source Path: c2_wideband_filter/Calculate C2filterout
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_c2_wideband_filter_Calculate_C2filterout IS
  PORT( C2filterouttmp                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        C2filterout                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_c2_wideband_filter_Calculate_C2filterout;


ARCHITECTURE rtl OF ur_ear_fpga_sim_c2_wideband_filter_Calculate_C2filterout IS

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_c2_wideband_filter_nfp_abs_single
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_c2_wideband_filter_nfp_div_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_c2_wideband_filter_nfp_abs_single
    USE ENTITY work.ur_ear_fpga_sim_c2_wideband_filter_nfp_abs_single(rtl);

  FOR ALL : ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single
    USE ENTITY work.ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single(rtl);

  FOR ALL : ur_ear_fpga_sim_c2_wideband_filter_nfp_div_single
    USE ENTITY work.ur_ear_fpga_sim_c2_wideband_filter_nfp_div_single(rtl);

  -- Signals
  SIGNAL Abs_out1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product1_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant1_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Divide_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant3_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product2_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Constant2_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Divide1_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_nfp_abs_comp : ur_ear_fpga_sim_c2_wideband_filter_nfp_abs_single
    PORT MAP( nfp_in => C2filterouttmp,  -- ufix32
              nfp_out => Abs_out1  -- ufix32
              );

  u_nfp_mul_comp : ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single
    PORT MAP( nfp_in1 => C2filterouttmp,  -- ufix32
              nfp_in2 => Abs_out1,  -- ufix32
              nfp_out => Product_out1  -- ufix32
              );

  u_nfp_mul_comp_1 : ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single
    PORT MAP( nfp_in1 => Product_out1,  -- ufix32
              nfp_in2 => Constant_out1,  -- ufix32
              nfp_out => Product1_out1  -- ufix32
              );

  u_nfp_div_comp : ur_ear_fpga_sim_c2_wideband_filter_nfp_div_single
    PORT MAP( nfp_in1 => Product1_out1,  -- ufix32
              nfp_in2 => Constant1_out1,  -- ufix32
              nfp_out => Divide_out1  -- ufix32
              );

  u_nfp_mul_comp_2 : ur_ear_fpga_sim_c2_wideband_filter_nfp_mul_single
    PORT MAP( nfp_in1 => Divide_out1,  -- ufix32
              nfp_in2 => Constant3_out1,  -- ufix32
              nfp_out => Product2_out1  -- ufix32
              );

  u_nfp_div_comp_1 : ur_ear_fpga_sim_c2_wideband_filter_nfp_div_single
    PORT MAP( nfp_in1 => Product2_out1,  -- ufix32
              nfp_in2 => Constant2_out1,  -- ufix32
              nfp_out => Divide1_out1  -- ufix32
              );

  Constant_out1 <= X"447a0000";

  Constant1_out1 <= X"41200000";

  Constant3_out1 <= X"447a0000";

  Constant2_out1 <= X"44fa0000";

  C2filterout <= Divide1_out1;

END rtl;

