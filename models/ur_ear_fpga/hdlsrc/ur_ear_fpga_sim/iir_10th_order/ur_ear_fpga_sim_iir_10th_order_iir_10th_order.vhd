-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\iir_10th_order\ur_ear_fpga_sim_iir_10th_order_iir_10th_order.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_iir_10th_order_iir_10th_order
-- Source Path: iir_10th_order
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_iir_10th_order_iir_10th_order IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        Sink_Data                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f1_c1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f1_c2                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f1_c3                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f1_c5                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f1_c6                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f2_c1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f2_c2                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f2_c3                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f2_c5                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f2_c6                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f3_c1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f3_c2                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f3_c3                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f3_c5                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f3_c6                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f4_c1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f4_c2                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f4_c3                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f4_c5                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f4_c6                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f5_c1                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f5_c2                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f5_c3                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f5_c5                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        f5_c6                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Source_Data                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_iir_10th_order_iir_10th_order;


ARCHITECTURE rtl OF ur_ear_fpga_sim_iir_10th_order_iir_10th_order IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    USE ENTITY work.ur_ear_fpga_sim_iir_10th_order_nfp_mul_single(rtl);

  FOR ALL : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    USE ENTITY work.ur_ear_fpga_sim_iir_10th_order_nfp_add_single(rtl);

  -- Signals
  SIGNAL Unit_Delay_out1                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product2_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay1_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product3_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum1_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum2_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum3_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay3_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product1_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum3_out1_1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product4_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum_out1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product7_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product8_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product5_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum5_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum6_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum7_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay5_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product6_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum7_out1_1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product9_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum4_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product12_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product13_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product10_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum9_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum10_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum11_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay7_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product11_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum11_out1_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product14_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum8_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product17_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product18_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product15_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum15_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum12_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum13_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay9_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product16_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum13_out1_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product19_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum14_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product22_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product23_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product20_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum19_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum16_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum17_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay11_out1                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product21_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum17_out1_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product24_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Sum18_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- Replacement for the Biquads
  -- 10th Order IIR Filter Implemented in Direct Form 1 with Coefficients added via Simulink Constant Blocks

  u_nfp_mul_comp : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f1_c2,  -- ufix32
              nfp_in2 => Unit_Delay_out1,  -- ufix32
              nfp_out => Product2_out1  -- ufix32
              );

  u_nfp_mul_comp_1 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f1_c1,  -- ufix32
              nfp_in2 => Sink_Data,  -- ufix32
              nfp_out => Product3_out1  -- ufix32
              );

  u_nfp_mul_comp_2 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f1_c3,  -- ufix32
              nfp_in2 => Unit_Delay1_out1,  -- ufix32
              nfp_out => Product_out1  -- ufix32
              );

  u_nfp_add_comp : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product2_out1,  -- ufix32
              nfp_in2 => Product_out1,  -- ufix32
              nfp_out => Sum1_out1  -- ufix32
              );

  u_nfp_add_comp_1 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product3_out1,  -- ufix32
              nfp_in2 => Sum1_out1,  -- ufix32
              nfp_out => Sum2_out1  -- ufix32
              );

  u_nfp_mul_comp_3 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f1_c6,  -- ufix32
              nfp_in2 => Unit_Delay3_out1,  -- ufix32
              nfp_out => Product1_out1  -- ufix32
              );

  u_nfp_mul_comp_4 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f1_c5,  -- ufix32
              nfp_in2 => Sum3_out1,  -- ufix32
              nfp_out => Product4_out1  -- ufix32
              );

  u_nfp_add_comp_2 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product4_out1,  -- ufix32
              nfp_in2 => Product1_out1,  -- ufix32
              nfp_out => Sum_out1  -- ufix32
              );

  u_nfp_add_comp_3 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Sum2_out1,  -- ufix32
              nfp_in2 => Sum_out1,  -- ufix32
              nfp_out => Sum3_out1_1  -- ufix32
              );

  u_nfp_mul_comp_5 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f2_c2,  -- ufix32
              nfp_in2 => Sum3_out1,  -- ufix32
              nfp_out => Product7_out1  -- ufix32
              );

  u_nfp_mul_comp_6 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f2_c1,  -- ufix32
              nfp_in2 => Sum3_out1_1,  -- ufix32
              nfp_out => Product8_out1  -- ufix32
              );

  u_nfp_mul_comp_7 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f2_c3,  -- ufix32
              nfp_in2 => Unit_Delay3_out1,  -- ufix32
              nfp_out => Product5_out1  -- ufix32
              );

  u_nfp_add_comp_4 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product7_out1,  -- ufix32
              nfp_in2 => Product5_out1,  -- ufix32
              nfp_out => Sum5_out1  -- ufix32
              );

  u_nfp_add_comp_5 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product8_out1,  -- ufix32
              nfp_in2 => Sum5_out1,  -- ufix32
              nfp_out => Sum6_out1  -- ufix32
              );

  u_nfp_mul_comp_8 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f2_c6,  -- ufix32
              nfp_in2 => Unit_Delay5_out1,  -- ufix32
              nfp_out => Product6_out1  -- ufix32
              );

  u_nfp_mul_comp_9 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f2_c5,  -- ufix32
              nfp_in2 => Sum7_out1,  -- ufix32
              nfp_out => Product9_out1  -- ufix32
              );

  u_nfp_add_comp_6 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product9_out1,  -- ufix32
              nfp_in2 => Product6_out1,  -- ufix32
              nfp_out => Sum4_out1  -- ufix32
              );

  u_nfp_add_comp_7 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Sum6_out1,  -- ufix32
              nfp_in2 => Sum4_out1,  -- ufix32
              nfp_out => Sum7_out1_1  -- ufix32
              );

  u_nfp_mul_comp_10 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f3_c2,  -- ufix32
              nfp_in2 => Sum7_out1,  -- ufix32
              nfp_out => Product12_out1  -- ufix32
              );

  u_nfp_mul_comp_11 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f3_c1,  -- ufix32
              nfp_in2 => Sum7_out1_1,  -- ufix32
              nfp_out => Product13_out1  -- ufix32
              );

  u_nfp_mul_comp_12 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f3_c3,  -- ufix32
              nfp_in2 => Unit_Delay5_out1,  -- ufix32
              nfp_out => Product10_out1  -- ufix32
              );

  u_nfp_add_comp_8 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product12_out1,  -- ufix32
              nfp_in2 => Product10_out1,  -- ufix32
              nfp_out => Sum9_out1  -- ufix32
              );

  u_nfp_add_comp_9 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product13_out1,  -- ufix32
              nfp_in2 => Sum9_out1,  -- ufix32
              nfp_out => Sum10_out1  -- ufix32
              );

  u_nfp_mul_comp_13 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f3_c6,  -- ufix32
              nfp_in2 => Unit_Delay7_out1,  -- ufix32
              nfp_out => Product11_out1  -- ufix32
              );

  u_nfp_mul_comp_14 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f3_c5,  -- ufix32
              nfp_in2 => Sum11_out1,  -- ufix32
              nfp_out => Product14_out1  -- ufix32
              );

  u_nfp_add_comp_10 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product14_out1,  -- ufix32
              nfp_in2 => Product11_out1,  -- ufix32
              nfp_out => Sum8_out1  -- ufix32
              );

  u_nfp_add_comp_11 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Sum10_out1,  -- ufix32
              nfp_in2 => Sum8_out1,  -- ufix32
              nfp_out => Sum11_out1_1  -- ufix32
              );

  u_nfp_mul_comp_15 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f4_c2,  -- ufix32
              nfp_in2 => Sum11_out1,  -- ufix32
              nfp_out => Product17_out1  -- ufix32
              );

  u_nfp_mul_comp_16 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f4_c1,  -- ufix32
              nfp_in2 => Sum11_out1_1,  -- ufix32
              nfp_out => Product18_out1  -- ufix32
              );

  u_nfp_mul_comp_17 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f4_c3,  -- ufix32
              nfp_in2 => Unit_Delay7_out1,  -- ufix32
              nfp_out => Product15_out1  -- ufix32
              );

  u_nfp_add_comp_12 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product17_out1,  -- ufix32
              nfp_in2 => Product15_out1,  -- ufix32
              nfp_out => Sum15_out1  -- ufix32
              );

  u_nfp_add_comp_13 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product18_out1,  -- ufix32
              nfp_in2 => Sum15_out1,  -- ufix32
              nfp_out => Sum12_out1  -- ufix32
              );

  u_nfp_mul_comp_18 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f4_c6,  -- ufix32
              nfp_in2 => Unit_Delay9_out1,  -- ufix32
              nfp_out => Product16_out1  -- ufix32
              );

  u_nfp_mul_comp_19 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f4_c5,  -- ufix32
              nfp_in2 => Sum13_out1,  -- ufix32
              nfp_out => Product19_out1  -- ufix32
              );

  u_nfp_add_comp_14 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product19_out1,  -- ufix32
              nfp_in2 => Product16_out1,  -- ufix32
              nfp_out => Sum14_out1  -- ufix32
              );

  u_nfp_add_comp_15 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Sum12_out1,  -- ufix32
              nfp_in2 => Sum14_out1,  -- ufix32
              nfp_out => Sum13_out1_1  -- ufix32
              );

  u_nfp_mul_comp_20 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f5_c2,  -- ufix32
              nfp_in2 => Sum13_out1,  -- ufix32
              nfp_out => Product22_out1  -- ufix32
              );

  u_nfp_mul_comp_21 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f5_c1,  -- ufix32
              nfp_in2 => Sum13_out1_1,  -- ufix32
              nfp_out => Product23_out1  -- ufix32
              );

  u_nfp_mul_comp_22 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f5_c3,  -- ufix32
              nfp_in2 => Unit_Delay9_out1,  -- ufix32
              nfp_out => Product20_out1  -- ufix32
              );

  u_nfp_add_comp_16 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product22_out1,  -- ufix32
              nfp_in2 => Product20_out1,  -- ufix32
              nfp_out => Sum19_out1  -- ufix32
              );

  u_nfp_add_comp_17 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product23_out1,  -- ufix32
              nfp_in2 => Sum19_out1,  -- ufix32
              nfp_out => Sum16_out1  -- ufix32
              );

  u_nfp_mul_comp_23 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f5_c6,  -- ufix32
              nfp_in2 => Unit_Delay11_out1,  -- ufix32
              nfp_out => Product21_out1  -- ufix32
              );

  u_nfp_mul_comp_24 : ur_ear_fpga_sim_iir_10th_order_nfp_mul_single
    PORT MAP( nfp_in1 => f5_c5,  -- ufix32
              nfp_in2 => Sum17_out1,  -- ufix32
              nfp_out => Product24_out1  -- ufix32
              );

  u_nfp_add_comp_18 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Product24_out1,  -- ufix32
              nfp_in2 => Product21_out1,  -- ufix32
              nfp_out => Sum18_out1  -- ufix32
              );

  u_nfp_add_comp_19 : ur_ear_fpga_sim_iir_10th_order_nfp_add_single
    PORT MAP( nfp_in1 => Sum16_out1,  -- ufix32
              nfp_in2 => Sum18_out1,  -- ufix32
              nfp_out => Sum17_out1_1  -- ufix32
              );

  Unit_Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay_out1 <= Sink_Data;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Unit_Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay1_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay1_out1 <= Unit_Delay_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay1_process;


  Unit_Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay3_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay3_out1 <= Sum3_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay3_process;


  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum3_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Sum3_out1 <= Sum3_out1_1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  Unit_Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay5_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay5_out1 <= Sum7_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay5_process;


  delayMatch1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum7_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Sum7_out1 <= Sum7_out1_1;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  Unit_Delay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay7_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay7_out1 <= Sum11_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay7_process;


  delayMatch2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum11_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Sum11_out1 <= Sum11_out1_1;
      END IF;
    END IF;
  END PROCESS delayMatch2_process;


  Unit_Delay9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay9_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay9_out1 <= Sum13_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay9_process;


  delayMatch3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum13_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Sum13_out1 <= Sum13_out1_1;
      END IF;
    END IF;
  END PROCESS delayMatch3_process;


  Unit_Delay11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay11_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Unit_Delay11_out1 <= Sum17_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay11_process;


  delayMatch4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum17_out1 <= X"00000000";
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Sum17_out1 <= Sum17_out1_1;
      END IF;
    END IF;
  END PROCESS delayMatch4_process;


  Source_Data <= Sum17_out1_1;

END rtl;

