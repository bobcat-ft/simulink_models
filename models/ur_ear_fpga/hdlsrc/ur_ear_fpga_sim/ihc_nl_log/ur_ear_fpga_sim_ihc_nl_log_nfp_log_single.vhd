-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\ihc_nl_log\ur_ear_fpga_sim_ihc_nl_log_nfp_log_single.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_ihc_nl_log_nfp_log_single
-- Source Path: ihc_nl_log/nfp_log_single
-- Hierarchy Level: 7
-- 
-- {Latency Strategy = "Zero", Denormal Handling = "off"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_ihc_nl_log_nfp_log_single IS
  PORT( nfp_in                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        nfp_out                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END ur_ear_fpga_sim_ihc_nl_log_nfp_log_single;


ARCHITECTURE rtl OF ur_ear_fpga_sim_ihc_nl_log_nfp_log_single IS

  ATTRIBUTE multstyle : string;

  -- Signals
  SIGNAL Constant1_out1                   : std_logic;  -- ufix1
  SIGNAL Constant1_out1_1                 : std_logic;  -- ufix1
  SIGNAL nfp_in_unsigned                  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL aSign                            : std_logic;  -- ufix1
  SIGNAL aExponent                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL aMantissa                        : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL aSign_1_out1                     : std_logic;  -- ufix1
  SIGNAL aExponent_cfType_Exponent_I_out1 : std_logic;  -- ufix1
  SIGNAL alphaaExponent_cfType_Exponent_out1 : std_logic;  -- ufix1
  SIGNAL aExponent_0_out1                 : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero_out1             : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch_out1                      : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL aMantissa_0_out1                 : std_logic;  -- ufix1
  SIGNAL alphaaExponent_0_aMantissa_out1  : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL alpha1_out1                      : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1                 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL alpha0_out1                      : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL if_Exponent_0_cfType_Exp_out1    : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL BitSlice_out1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL bitsliceget_mant_norm_mant_no_out1 : std_logic;  -- ufix1
  SIGNAL C_out1                           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Constant_out1_1                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Constant1_out1_2                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Concat_out1_1                : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1                         : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_tmp_out1                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_1_out1                         : std_logic;  -- ufix1
  SIGNAL C_out1_1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_Exponent_0_out1               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL DTC_out1_1                       : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL ExponentBias_out1                : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL exp_unbiased_cast_cfType_Exp_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL C_out1_2                         : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Add_out1                         : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL if_w_1_out1                      : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Constant4_out1                   : signed(27 DOWNTO 0);  -- sfix28_En26
  SIGNAL Product_mul_temp                 : signed(38 DOWNTO 0);  -- sfix39_En26
  SIGNAL Product_out1                     : signed(36 DOWNTO 0);  -- sfix37_En26
  SIGNAL Compare_To_Constant1_out1        : std_logic;  -- ufix1
  SIGNAL Constant_out1_2                  : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Bit_Concat_out1_2                : unsigned(57 DOWNTO 0);  -- ufix58
  SIGNAL Data_Type_Conversion_out1        : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL Compare_To_Constant_out1         : std_logic;  -- ufix1
  SIGNAL Constant1_out1_3                 : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL Switch1_out1                     : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL bitsll_w_1_out1                  : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha2_out1                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_2_out1                         : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_1_1_out1                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_1                  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL DTC_1_out1                       : signed(6 DOWNTO 0);  -- sfix7_En2
  SIGNAL w_hat_0_5_out1                   : std_logic;  -- ufix1
  SIGNAL w_hat_0_75_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_1                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1                   : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL Constant_out1_3                  : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat_out1_3                : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_2                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_4                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1                 : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL alpha2_tmp2_out1                 : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1                  : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat3_out1                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1                 : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha2_tmp1_out1                 : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1             : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_2                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_5_out1_1                 : std_logic;  -- ufix1
  SIGNAL w_hat_0_75_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_1         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_2                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_2          : std_logic;  -- ufix1
  SIGNAL Constant_out1_4                  : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat_out1_5                : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_3                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_6                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_2               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_1               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_1               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_1               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_1     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha2_tmp2_out1_1               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_1                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_1               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha2_tmp1_out1_1               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_1           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_3                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_1 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_2                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_3                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_3          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_4                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_3               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_4                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_7                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_4               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_2               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_2               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_2               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_2     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_2                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_2               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_1                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_2           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_4                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_2 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_3                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_1         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_4                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_4          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_5                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_5               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_5                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_8                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_3               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_3               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_3               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_3     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_2                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_3                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_3               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_3                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_3           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_5                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_3 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_4                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_2         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_5                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_5          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_6                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_7               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_6                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_9                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_8               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_4               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_4               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_4               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_4     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_4                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_4                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_4               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_5                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_4           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_6                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_4 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_5                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_3         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_6                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_6          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_7                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_9               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_7                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_10               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_10              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_5               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_5               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_5               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_5     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_6                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_5                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_5               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_7                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_5           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_7                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_5 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_6                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_4         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_7                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_7          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_8                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_11              : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_8                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_11               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_12              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_6               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_6               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_6               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_6     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_8                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_6                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_6               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_9                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_6           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_8                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_6 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_7                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_5         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_8                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_8          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_9                 : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_13              : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_9                       : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_12               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_14              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_7               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_7               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_7               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_7     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_10                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_7                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_7               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_11                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_7           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_9                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_7 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_8                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_6         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_9                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_9          : std_logic;  -- ufix1
  SIGNAL Constant1_out1_10                : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_15              : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_10                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_13               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_16              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_8               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_8               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_8               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_8     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_12                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_8                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_8               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_13                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_8           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice_out1_10                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_8 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_9                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_7         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_10               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_10         : std_logic;  -- ufix1
  SIGNAL Constant1_out1_11                : unsigned(25 DOWNTO 0);  -- ufix26_En24
  SIGNAL Bit_Concat1_out1_17              : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL DTC_out1_11                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bit_Concat_out1_14               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_18              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_9               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat4_out1_9               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat3_out1_9               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL reinterpretcast_17_12_out1_9     : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_14                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_1_out1_9                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL Bitwise_XOR_out1_9               : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_tmp2_out1_15                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_hat_0_75_1_out1_9           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_0_out1                         : std_logic;  -- ufix1
  SIGNAL Zero_out1                        : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL logTable_int32_3_out1            : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL if_w_hat_0_5_out1                : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL logMinusTable_int32_3_out1       : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL if_w_hat_0_75_out1               : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Constant1_out1_12                : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_19              : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL DTC1_out1                        : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Zero_out1_1                      : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Constant2_out1                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_w_hat_0_5_out1_1              : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Constant3_out1                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_w_hat_0_75_out1_1             : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL L_logTable_3_1_out1              : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Constant_out1_5                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_15               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL DTC_1_out1_1                     : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL Zero_out1_2                      : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL logTable_int32_4_out1            : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL if_w_hat_0_5_out1_2              : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL logMinusTable_int32_4_out1       : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL if_w_hat_0_75_out1_2             : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL L_logTable_3_1_out1_1            : signed(33 DOWNTO 0);  -- sfix34_En31
  SIGNAL Constant_out1_6                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1_16               : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL reinterpretcast_bitsliceget_w_1_out1 : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL Zero_out1_3                      : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL logTable_int32_4_out1_1          : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL if_w_hat_0_5_out1_3              : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL logMinusTable_int32_4_out1_1     : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL if_w_hat_0_75_out1_3             : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL L_logTable_3_1_out1_2            : signed(35 DOWNTO 0);  -- sfix36_En33
  SIGNAL Constant_out1_7                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_17               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_1 : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL Zero_out1_4                      : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL logTable_int32_4_out1_2          : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL if_w_hat_0_5_out1_4              : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL logMinusTable_int32_4_out1_2     : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL if_w_hat_0_75_out1_4             : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL L_logTable_3_1_out1_3            : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL Constant_out1_8                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_18               : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_2 : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Zero_out1_5                      : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL logTable_int32_4_out1_3          : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL if_w_hat_0_5_out1_5              : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL logMinusTable_int32_4_out1_3     : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL if_w_hat_0_75_out1_5             : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL L_logTable_3_1_out1_4            : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Constant_out1_9                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_19               : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_3 : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Zero_out1_6                      : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL logTable_int32_4_out1_4          : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL if_w_hat_0_5_out1_6              : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL logMinusTable_int32_4_out1_4     : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL if_w_hat_0_75_out1_6             : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL L_logTable_3_1_out1_5            : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Constant_out1_10                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_20               : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_4 : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Zero_out1_7                      : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL logTable_int32_4_out1_5          : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL if_w_hat_0_5_out1_7              : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL logMinusTable_int32_4_out1_5     : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL if_w_hat_0_75_out1_7             : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL L_logTable_3_1_out1_6            : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Constant_out1_11                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_21               : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_5 : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Zero_out1_8                      : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL logTable_int32_4_out1_6          : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_5_out1_8              : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL logMinusTable_int32_4_out1_6     : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_75_out1_8             : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL L_logTable_3_1_out1_7            : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Zero_out1_9                      : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL logTable_int32_4_out1_7          : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_5_out1_9              : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL logMinusTable_int32_4_out1_7     : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_75_out1_9             : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL L_logTable_10_out1               : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL alpha0_out1_1                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Bit_Concat_out1_22               : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL reinterpretcast_bitconcat_L_f_out1 : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL BitSlice_out1_11                 : std_logic;  -- ufix1
  SIGNAL alphaw_cast                      : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL alphaw_cast_1                    : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL alphaw_out1                      : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_sign_1_out1                   : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL w_abs_2_out1                     : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1                   : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_11         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_12         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_1                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_13         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_2                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_2                : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Slice7_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_14         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Start_out1                       : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator4_out1_2         : std_logic;  -- ufix1
  SIGNAL Start_1_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_1                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator1_out1_11        : std_logic;  -- ufix1
  SIGNAL Switch2_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator6_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch6_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_2                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator2_out1_4         : std_logic;  -- ufix1
  SIGNAL Switch4_out1_1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch33_out1                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_2                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_3                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_2                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha24_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha25_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha26_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch34_out1                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_w_abs_j_zerosig           : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_w_abs_j_selsig            : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_w_abs_j_zerosig_1         : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_w_abs_j_selsig_1          : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_w_abs_j_out1              : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL bitsra_w_abs_1_out1              : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha1_out1_1                    : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL if_w_abs_2_1_out1                : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice1_out1_10                : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL DTC_1_out1_2                     : unsigned(25 DOWNTO 0);  -- ufix26_En25
  SIGNAL bitsra_w_cfType_Log2NumberOfI_out1 : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL alpha1_tmp1_out1                 : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL BitSlice2_out1                   : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL reinterpretcast_bitsliceget_tm_out1 : unsigned(25 DOWNTO 0);  -- ufix26_En25
  SIGNAL tmp_m1_tmp_m2_out1               : unsigned(51 DOWNTO 0);  -- ufix52_En50
  SIGNAL DTC_out1_12                      : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL alphaw1_cast                     : signed(50 DOWNTO 0);  -- sfix51_En47
  SIGNAL alphaw1_cast_1                   : signed(50 DOWNTO 0);  -- sfix51_En47
  SIGNAL alphaw1_out1                     : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL cfType_Log2NumberOfIterations_out1 : signed(7 DOWNTO 0);  -- int8
  SIGNAL C_out1_3                         : signed(7 DOWNTO 0);  -- int8
  SIGNAL if_w_abs_2_out1                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL cfType_Log2NumberOfIterations_out1_1 : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsra_appx_shift_zerosig        : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsra_appx_shift_selsig         : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_4                    : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL bitsra_appx_shift_zerosig_1      : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsra_appx_shift_selsig_1       : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsra_appx_shift_out1           : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL L_tmp4_out1                      : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL if_w_0_out1                      : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL BitSlice_out1_12                 : std_logic;  -- ufix1
  SIGNAL bitget_L_L_WordLength_0_out1     : std_logic;  -- ufix1
  SIGNAL alpha1_out1_2                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_out1_3                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL if_bitget_L_L_WordLength_0_out1  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Constant2_out1_1                 : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL Switch_out1_5                    : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL Bit_Concat1_out1_20              : unsigned(57 DOWNTO 0);  -- ufix58
  SIGNAL reinterpretcast_bitconcat_fi_0_out1 : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL exp_tmp_L_out1                   : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL BitSlice_out1_13                 : std_logic;  -- ufix1
  SIGNAL C4_out1                          : std_logic;  -- ufix1
  SIGNAL if_aExponent_0_2_out1            : std_logic;  -- ufix1
  SIGNAL Switch_out1_6                    : std_logic;  -- ufix1
  SIGNAL Switch1_out1_5                   : std_logic;  -- ufix1
  SIGNAL Constant3_out1_1                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Unary_Minus_cast                 : signed(58 DOWNTO 0);  -- sfix59_En47
  SIGNAL Unary_Minus_cast_1               : signed(58 DOWNTO 0);  -- sfix59_En47
  SIGNAL Unary_Minus_out1                 : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL Switch_out1_7                    : signed(57 DOWNTO 0);  -- sfix58_En47
  SIGNAL BitSlice1_out1_11                : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_3                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_15         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_4                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_5                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_5                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_5                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_16         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_5                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_5                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_6                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_6                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_7                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_17         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_6                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_6                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_15        : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_7                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_7                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_8                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_18         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_7                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_7                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_8                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_8                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_9                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_19         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_9                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_8                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_9                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice7_out1_9                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_10               : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_20         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_10               : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_9                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_9                : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Slice7_out1_10               : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_11               : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_21         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_11               : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_11               : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_10                : std_logic;  -- ufix1
  SIGNAL Start_out1_3                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator4_out1_10        : std_logic;  -- ufix1
  SIGNAL Start_1_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_8                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator1_out1_19        : std_logic;  -- ufix1
  SIGNAL Switch2_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator6_out1_7         : std_logic;  -- ufix1
  SIGNAL Switch6_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_3                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_4                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_9                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator2_out1_11        : std_logic;  -- ufix1
  SIGNAL Switch4_out1_4                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch33_out1_1                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_5                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_10                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_5                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_6                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_11                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_6                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Logical_Operator5_out1_8         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch34_out1_1                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_7                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_12                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_10                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_7                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_8                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_13                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_10                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_11                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_8                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_12                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_out1_9                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_1_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch_out1_14                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_2_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_3_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1_11                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch1_out1_13                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_4_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_5_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_6_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Start_7_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_10                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch6_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_9                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha56_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha57_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch7_out1_11                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch3_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch4_out1_10                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch5_out1_10                  : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC_out1_13                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha0_out1_2                    : std_logic;  -- ufix1
  SIGNAL bitsll_out1                      : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL BitSlice2_out1_1                 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Concat_out1_23               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL BitSlice_out1_14                 : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1_12                : std_logic;  -- ufix1
  SIGNAL LogicalOperator1_out1            : std_logic;  -- ufix1
  SIGNAL LogicalOperator_out1             : std_logic;  -- ufix1
  SIGNAL constant1_out1_13                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Add1_out1                        : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL if_bitget_Mant_tmp_1_0_out1      : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL BitSlice2_out1_2                 : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant_out1_1       : std_logic;  -- ufix1
  SIGNAL alpha80_out1                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL subtract_out1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha80_1_out1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch1_out1_14                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL constant_out1_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Add_out1_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL switch_out1_15                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C_out1_4                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_aSign_1_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C2_out1                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_aExponent_0_out1              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch2_out1_12                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch6_out1_10                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Constant2_out1_2                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Compare_To_Zero_out1_1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_22         : std_logic;  -- ufix1
  SIGNAL BitSlice3_out1                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C_out1_5                         : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL switch1_out1_15                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C1_out1                          : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_aSign_1_1_out1                : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C3_out1                          : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_aExponent_0_1_out1            : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch3_out1_1                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch5_out1_11                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL nfp_out_pack                     : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  Constant1_out1 <= '1';

  Constant1_out1_1 <= '0';

  nfp_in_unsigned <= unsigned(nfp_in);

  -- Split 32 bit word into FP sign, exponent, mantissa
  aSign <= nfp_in_unsigned(31);
  aExponent <= nfp_in_unsigned(30 DOWNTO 23);
  aMantissa <= nfp_in_unsigned(22 DOWNTO 0);

  
  aSign_1_out1 <= '1' WHEN aSign = '1' ELSE
      '0';

  
  aExponent_cfType_Exponent_I_out1 <= '1' WHEN aExponent = to_unsigned(16#FF#, 8) ELSE
      '0';

  alphaaExponent_cfType_Exponent_out1 <= aSign_1_out1 OR aExponent_cfType_Exponent_I_out1;

  
  aExponent_0_out1 <= '1' WHEN aExponent = to_unsigned(16#00#, 8) ELSE
      '0';

  
  Compare_To_Zero_out1 <= '1' WHEN aExponent = to_unsigned(16#00#, 8) ELSE
      '0';

  Constant_out1 <= to_unsigned(16#000000#, 23);

  
  Switch_out1 <= aMantissa WHEN Compare_To_Zero_out1 = '0' ELSE
      Constant_out1;

  
  aMantissa_0_out1 <= '1' WHEN Switch_out1 = to_unsigned(16#000000#, 23) ELSE
      '0';

  alphaaExponent_0_aMantissa_out1 <= aExponent_0_out1 AND aMantissa_0_out1;

  Logical_Operator_out1 <= alphaaExponent_cfType_Exponent_out1 OR alphaaExponent_0_aMantissa_out1;

  alpha1_out1 <= '1';

  Bit_Concat1_out1 <= alpha1_out1 & Switch_out1;

  alpha0_out1 <= '0';

  Bit_Concat_out1 <= alpha0_out1 & Switch_out1;

  
  if_Exponent_0_cfType_Exp_out1 <= Bit_Concat1_out1 WHEN aExponent_0_out1 = '0' ELSE
      Bit_Concat_out1;

  BitSlice_out1 <= if_Exponent_0_cfType_Exp_out1(22 DOWNTO 0);

  
  bitsliceget_mant_norm_mant_no_out1 <= '1' WHEN BitSlice_out1 /= to_unsigned(16#000000#, 23) ELSE
      '0';

  C_out1 <= to_signed(16#00000000#, 30);

  Constant_out1_1 <= to_unsigned(16#0#, 4);

  Constant1_out1_2 <= to_unsigned(16#0#, 3);

  Bit_Concat_out1_1 <= Constant_out1_1 & BitSlice_out1 & Constant1_out1_2;

  DTC_out1 <= signed(Bit_Concat_out1_1);

  
  if_tmp_out1 <= C_out1 WHEN bitsliceget_mant_norm_mant_no_out1 = '0' ELSE
      DTC_out1;

  
  w_1_out1 <= '1' WHEN if_tmp_out1 > to_signed(16#02000000#, 30) ELSE
      '0';

  C_out1_1 <= to_unsigned(16#01#, 8);

  
  if_Exponent_0_out1 <= aExponent WHEN aExponent_0_out1 = '0' ELSE
      C_out1_1;

  DTC_out1_1 <= signed(resize(if_Exponent_0_out1, 11));

  ExponentBias_out1 <= to_signed(-16#07F#, 11);

  exp_unbiased_cast_cfType_Exp_out1 <= DTC_out1_1 + ExponentBias_out1;

  C_out1_2 <= to_signed(16#001#, 11);

  Add_out1 <= C_out1_2 + exp_unbiased_cast_cfType_Exp_out1;

  
  if_w_1_out1 <= exp_unbiased_cast_cfType_Exp_out1 WHEN w_1_out1 = '0' ELSE
      Add_out1;

  Constant4_out1 <= to_signed(16#2C5C85F#, 28);

  Product_mul_temp <= if_w_1_out1 * Constant4_out1;
  Product_out1 <= Product_mul_temp(36 DOWNTO 0);

  
  Compare_To_Constant1_out1 <= '1' WHEN if_w_1_out1 = to_signed(-16#001#, 11) ELSE
      '0';

  Constant_out1_2 <= to_unsigned(16#000000#, 21);

  Bit_Concat_out1_2 <= unsigned(Product_out1) & Constant_out1_2;

  Data_Type_Conversion_out1 <= signed(Bit_Concat_out1_2);

  
  Compare_To_Constant_out1 <= '1' WHEN if_w_1_out1 = to_signed(16#001#, 11) ELSE
      '0';

  Constant1_out1_3 <= signed'("1111111111101001110100011011110100000001000001011100011000");

  
  Switch1_out1 <= Data_Type_Conversion_out1 WHEN Compare_To_Constant1_out1 = '0' ELSE
      Constant1_out1_3;

  bitsll_w_1_out1 <= if_tmp_out1 sll 1;

  alpha2_out1 <= to_signed(-16#04000000#, 30);

  w_2_out1 <= if_tmp_out1 + alpha2_out1;

  
  if_w_1_1_out1 <= bitsll_w_1_out1 WHEN w_1_out1 = '0' ELSE
      w_2_out1;

  BitSlice_out1_1 <= unsigned(if_w_1_1_out1(29 DOWNTO 23));

  DTC_1_out1 <= signed(BitSlice_out1_1);

  
  w_hat_0_5_out1 <= '1' WHEN DTC_1_out1 < to_signed(-16#02#, 7) ELSE
      '0';

  
  w_hat_0_75_out1 <= '1' WHEN DTC_1_out1 >= to_signed(16#03#, 7) ELSE
      '0';

  Logical_Operator2_out1 <= w_hat_0_5_out1 OR w_hat_0_75_out1;

  bitsll_w_1_out1_1 <= if_w_1_1_out1 sll 1;

  BitSlice1_out1 <= if_w_1_1_out1(29);

  Logical_Operator_out1_1 <=  NOT BitSlice1_out1;

  Constant_out1_3 <= to_unsigned(16#2000000#, 26);

  Bit_Concat_out1_3 <= Logical_Operator_out1_1 & Logical_Operator_out1_1 & Logical_Operator_out1_1 & Constant_out1_3 & Logical_Operator_out1_1;

  DTC_out1_2 <= signed(Bit_Concat_out1_3);

  Bit_Concat_out1_4 <= unsigned'(Logical_Operator_out1_1 & Logical_Operator_out1_1);

  Bit_Concat1_out1_1 <= Bit_Concat_out1_4 & Bit_Concat_out1_4;

  Bit_Concat2_out1 <= Bit_Concat1_out1_1 & Bit_Concat1_out1_1;

  Bit_Concat4_out1 <= Bit_Concat2_out1 & Bit_Concat2_out1;

  alpha2_tmp2_out1 <= bitsll_w_1_out1_1 + DTC_out1_2;

  bitsra_w_1_out1 <= SHIFT_RIGHT(if_w_1_1_out1, 1);

  Bit_Concat3_out1 <= Bit_Concat4_out1 & Bit_Concat2_out1 & Bit_Concat1_out1_1 & Bit_Concat_out1_4;

  reinterpretcast_17_12_out1 <= signed(Bit_Concat3_out1);

  Bitwise_XOR_out1 <= bitsra_w_1_out1 XOR reinterpretcast_17_12_out1;

  alpha2_tmp1_out1 <= alpha2_tmp2_out1 + Bitwise_XOR_out1;

  
  if_w_hat_0_75_1_out1 <= bitsll_w_1_out1_1 WHEN Logical_Operator2_out1 = '0' ELSE
      alpha2_tmp1_out1;

  BitSlice_out1_2 <= unsigned(if_w_hat_0_75_1_out1(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1 <= signed(BitSlice_out1_2);

  
  w_hat_0_5_out1_1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1 < to_signed(-16#008#, 9) ELSE
      '0';

  
  w_hat_0_75_out1_1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1 > to_signed(16#008#, 9) ELSE
      '0';

  Logical_Operator2_out1_1 <= w_hat_0_5_out1_1 OR w_hat_0_75_out1_1;

  bitsll_w_1_out1_2 <= if_w_hat_0_75_1_out1 sll 1;

  BitSlice1_out1_1 <= if_w_hat_0_75_1_out1(29);

  Logical_Operator_out1_2 <=  NOT BitSlice1_out1_1;

  Constant_out1_4 <= to_unsigned(16#2000000#, 26);

  Bit_Concat_out1_5 <= Logical_Operator_out1_2 & Logical_Operator_out1_2 & Logical_Operator_out1_2 & Constant_out1_4 & Logical_Operator_out1_2;

  DTC_out1_3 <= signed(Bit_Concat_out1_5);

  Bit_Concat_out1_6 <= unsigned'(Logical_Operator_out1_2 & Logical_Operator_out1_2);

  Bit_Concat1_out1_2 <= Bit_Concat_out1_6 & Bit_Concat_out1_6;

  Bit_Concat2_out1_1 <= Bit_Concat1_out1_2 & Bit_Concat1_out1_2;

  Bit_Concat4_out1_1 <= Bit_Concat2_out1_1 & Bit_Concat2_out1_1;

  Bit_Concat3_out1_1 <= Bit_Concat4_out1_1 & Bit_Concat2_out1_1 & Bit_Concat1_out1_2 & Bit_Concat_out1_6;

  reinterpretcast_17_12_out1_1 <= signed(Bit_Concat3_out1_1);

  alpha2_tmp2_out1_1 <= bitsll_w_1_out1_2 + DTC_out1_3;

  bitsra_w_1_out1_1 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1, 2);

  Bitwise_XOR_out1_1 <= reinterpretcast_17_12_out1_1 XOR bitsra_w_1_out1_1;

  alpha2_tmp1_out1_1 <= alpha2_tmp2_out1_1 + Bitwise_XOR_out1_1;

  
  if_w_hat_0_75_1_out1_1 <= bitsll_w_1_out1_2 WHEN Logical_Operator2_out1_1 = '0' ELSE
      alpha2_tmp1_out1_1;

  BitSlice_out1_3 <= unsigned(if_w_hat_0_75_1_out1_1(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_1 <= signed(BitSlice_out1_3);

  
  w_hat_0_75_out1_2 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_1 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_2 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_1 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1 <= w_hat_0_75_out1_2 OR w_hat_0_5_out1_2;

  bitsll_w_1_out1_3 <= if_w_hat_0_75_1_out1_1 sll 1;

  BitSlice1_out1_2 <= if_w_hat_0_75_1_out1_1(29);

  Logical_Operator_out1_3 <=  NOT BitSlice1_out1_2;

  Constant1_out1_4 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_3 <= Logical_Operator_out1_3 & Logical_Operator_out1_3 & Logical_Operator_out1_3 & Constant1_out1_4 & Logical_Operator_out1_3;

  DTC_out1_4 <= signed(Bit_Concat1_out1_3);

  Bit_Concat_out1_7 <= unsigned'(Logical_Operator_out1_3 & Logical_Operator_out1_3);

  Bit_Concat1_out1_4 <= Bit_Concat_out1_7 & Bit_Concat_out1_7;

  Bit_Concat2_out1_2 <= Bit_Concat1_out1_4 & Bit_Concat1_out1_4;

  Bit_Concat4_out1_2 <= Bit_Concat2_out1_2 & Bit_Concat2_out1_2;

  Bit_Concat3_out1_2 <= Bit_Concat4_out1_2 & Bit_Concat2_out1_2 & Bit_Concat1_out1_4 & Bit_Concat_out1_7;

  reinterpretcast_17_12_out1_2 <= signed(Bit_Concat3_out1_2);

  w_tmp2_out1 <= bitsll_w_1_out1_3 + DTC_out1_4;

  bitsra_w_1_out1_2 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_1, 3);

  Bitwise_XOR_out1_2 <= reinterpretcast_17_12_out1_2 XOR bitsra_w_1_out1_2;

  w_tmp2_out1_1 <= w_tmp2_out1 + Bitwise_XOR_out1_2;

  
  if_w_hat_0_75_1_out1_2 <= bitsll_w_1_out1_3 WHEN Logical_Operator1_out1 = '0' ELSE
      w_tmp2_out1_1;

  BitSlice_out1_4 <= unsigned(if_w_hat_0_75_1_out1_2(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_2 <= signed(BitSlice_out1_4);

  
  w_hat_0_75_out1_3 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_2 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_3 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_2 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_1 <= w_hat_0_75_out1_3 OR w_hat_0_5_out1_3;

  bitsll_w_1_out1_4 <= if_w_hat_0_75_1_out1_2 sll 1;

  BitSlice1_out1_3 <= if_w_hat_0_75_1_out1_2(29);

  Logical_Operator_out1_4 <=  NOT BitSlice1_out1_3;

  Constant1_out1_5 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_5 <= Logical_Operator_out1_4 & Logical_Operator_out1_4 & Logical_Operator_out1_4 & Constant1_out1_5 & Logical_Operator_out1_4;

  DTC_out1_5 <= signed(Bit_Concat1_out1_5);

  Bit_Concat_out1_8 <= unsigned'(Logical_Operator_out1_4 & Logical_Operator_out1_4);

  Bit_Concat1_out1_6 <= Bit_Concat_out1_8 & Bit_Concat_out1_8;

  Bit_Concat2_out1_3 <= Bit_Concat1_out1_6 & Bit_Concat1_out1_6;

  Bit_Concat4_out1_3 <= Bit_Concat2_out1_3 & Bit_Concat2_out1_3;

  Bit_Concat3_out1_3 <= Bit_Concat4_out1_3 & Bit_Concat2_out1_3 & Bit_Concat1_out1_6 & Bit_Concat_out1_8;

  reinterpretcast_17_12_out1_3 <= signed(Bit_Concat3_out1_3);

  w_tmp2_out1_2 <= bitsll_w_1_out1_4 + DTC_out1_5;

  bitsra_w_1_out1_3 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_2, 4);

  Bitwise_XOR_out1_3 <= reinterpretcast_17_12_out1_3 XOR bitsra_w_1_out1_3;

  w_tmp2_out1_3 <= w_tmp2_out1_2 + Bitwise_XOR_out1_3;

  
  if_w_hat_0_75_1_out1_3 <= bitsll_w_1_out1_4 WHEN Logical_Operator1_out1_1 = '0' ELSE
      w_tmp2_out1_3;

  BitSlice_out1_5 <= unsigned(if_w_hat_0_75_1_out1_3(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_3 <= signed(BitSlice_out1_5);

  
  w_hat_0_75_out1_4 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_3 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_4 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_3 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_2 <= w_hat_0_75_out1_4 OR w_hat_0_5_out1_4;

  bitsll_w_1_out1_5 <= if_w_hat_0_75_1_out1_3 sll 1;

  BitSlice1_out1_4 <= if_w_hat_0_75_1_out1_3(29);

  Logical_Operator_out1_5 <=  NOT BitSlice1_out1_4;

  Constant1_out1_6 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_7 <= Logical_Operator_out1_5 & Logical_Operator_out1_5 & Logical_Operator_out1_5 & Constant1_out1_6 & Logical_Operator_out1_5;

  DTC_out1_6 <= signed(Bit_Concat1_out1_7);

  Bit_Concat_out1_9 <= unsigned'(Logical_Operator_out1_5 & Logical_Operator_out1_5);

  Bit_Concat1_out1_8 <= Bit_Concat_out1_9 & Bit_Concat_out1_9;

  Bit_Concat2_out1_4 <= Bit_Concat1_out1_8 & Bit_Concat1_out1_8;

  Bit_Concat4_out1_4 <= Bit_Concat2_out1_4 & Bit_Concat2_out1_4;

  Bit_Concat3_out1_4 <= Bit_Concat4_out1_4 & Bit_Concat2_out1_4 & Bit_Concat1_out1_8 & Bit_Concat_out1_9;

  reinterpretcast_17_12_out1_4 <= signed(Bit_Concat3_out1_4);

  w_tmp2_out1_4 <= bitsll_w_1_out1_5 + DTC_out1_6;

  bitsra_w_1_out1_4 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_3, 5);

  Bitwise_XOR_out1_4 <= reinterpretcast_17_12_out1_4 XOR bitsra_w_1_out1_4;

  w_tmp2_out1_5 <= w_tmp2_out1_4 + Bitwise_XOR_out1_4;

  
  if_w_hat_0_75_1_out1_4 <= bitsll_w_1_out1_5 WHEN Logical_Operator1_out1_2 = '0' ELSE
      w_tmp2_out1_5;

  BitSlice_out1_6 <= unsigned(if_w_hat_0_75_1_out1_4(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_4 <= signed(BitSlice_out1_6);

  
  w_hat_0_75_out1_5 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_4 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_5 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_4 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_3 <= w_hat_0_75_out1_5 OR w_hat_0_5_out1_5;

  bitsll_w_1_out1_6 <= if_w_hat_0_75_1_out1_4 sll 1;

  BitSlice1_out1_5 <= if_w_hat_0_75_1_out1_4(29);

  Logical_Operator_out1_6 <=  NOT BitSlice1_out1_5;

  Constant1_out1_7 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_9 <= Logical_Operator_out1_6 & Logical_Operator_out1_6 & Logical_Operator_out1_6 & Constant1_out1_7 & Logical_Operator_out1_6;

  DTC_out1_7 <= signed(Bit_Concat1_out1_9);

  Bit_Concat_out1_10 <= unsigned'(Logical_Operator_out1_6 & Logical_Operator_out1_6);

  Bit_Concat1_out1_10 <= Bit_Concat_out1_10 & Bit_Concat_out1_10;

  Bit_Concat2_out1_5 <= Bit_Concat1_out1_10 & Bit_Concat1_out1_10;

  Bit_Concat4_out1_5 <= Bit_Concat2_out1_5 & Bit_Concat2_out1_5;

  Bit_Concat3_out1_5 <= Bit_Concat4_out1_5 & Bit_Concat2_out1_5 & Bit_Concat1_out1_10 & Bit_Concat_out1_10;

  reinterpretcast_17_12_out1_5 <= signed(Bit_Concat3_out1_5);

  w_tmp2_out1_6 <= bitsll_w_1_out1_6 + DTC_out1_7;

  bitsra_w_1_out1_5 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_4, 6);

  Bitwise_XOR_out1_5 <= reinterpretcast_17_12_out1_5 XOR bitsra_w_1_out1_5;

  w_tmp2_out1_7 <= w_tmp2_out1_6 + Bitwise_XOR_out1_5;

  
  if_w_hat_0_75_1_out1_5 <= bitsll_w_1_out1_6 WHEN Logical_Operator1_out1_3 = '0' ELSE
      w_tmp2_out1_7;

  BitSlice_out1_7 <= unsigned(if_w_hat_0_75_1_out1_5(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_5 <= signed(BitSlice_out1_7);

  
  w_hat_0_75_out1_6 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_5 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_6 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_5 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_4 <= w_hat_0_75_out1_6 OR w_hat_0_5_out1_6;

  bitsll_w_1_out1_7 <= if_w_hat_0_75_1_out1_5 sll 1;

  BitSlice1_out1_6 <= if_w_hat_0_75_1_out1_5(29);

  Logical_Operator_out1_7 <=  NOT BitSlice1_out1_6;

  Constant1_out1_8 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_11 <= Logical_Operator_out1_7 & Logical_Operator_out1_7 & Logical_Operator_out1_7 & Constant1_out1_8 & Logical_Operator_out1_7;

  DTC_out1_8 <= signed(Bit_Concat1_out1_11);

  Bit_Concat_out1_11 <= unsigned'(Logical_Operator_out1_7 & Logical_Operator_out1_7);

  Bit_Concat1_out1_12 <= Bit_Concat_out1_11 & Bit_Concat_out1_11;

  Bit_Concat2_out1_6 <= Bit_Concat1_out1_12 & Bit_Concat1_out1_12;

  Bit_Concat4_out1_6 <= Bit_Concat2_out1_6 & Bit_Concat2_out1_6;

  Bit_Concat3_out1_6 <= Bit_Concat4_out1_6 & Bit_Concat2_out1_6 & Bit_Concat1_out1_12 & Bit_Concat_out1_11;

  reinterpretcast_17_12_out1_6 <= signed(Bit_Concat3_out1_6);

  w_tmp2_out1_8 <= bitsll_w_1_out1_7 + DTC_out1_8;

  bitsra_w_1_out1_6 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_5, 7);

  Bitwise_XOR_out1_6 <= reinterpretcast_17_12_out1_6 XOR bitsra_w_1_out1_6;

  w_tmp2_out1_9 <= w_tmp2_out1_8 + Bitwise_XOR_out1_6;

  
  if_w_hat_0_75_1_out1_6 <= bitsll_w_1_out1_7 WHEN Logical_Operator1_out1_4 = '0' ELSE
      w_tmp2_out1_9;

  BitSlice_out1_8 <= unsigned(if_w_hat_0_75_1_out1_6(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_6 <= signed(BitSlice_out1_8);

  
  w_hat_0_75_out1_7 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_6 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_7 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_6 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_5 <= w_hat_0_75_out1_7 OR w_hat_0_5_out1_7;

  bitsll_w_1_out1_8 <= if_w_hat_0_75_1_out1_6 sll 1;

  BitSlice1_out1_7 <= if_w_hat_0_75_1_out1_6(29);

  Logical_Operator_out1_8 <=  NOT BitSlice1_out1_7;

  Constant1_out1_9 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_13 <= Logical_Operator_out1_8 & Logical_Operator_out1_8 & Logical_Operator_out1_8 & Constant1_out1_9 & Logical_Operator_out1_8;

  DTC_out1_9 <= signed(Bit_Concat1_out1_13);

  Bit_Concat_out1_12 <= unsigned'(Logical_Operator_out1_8 & Logical_Operator_out1_8);

  Bit_Concat1_out1_14 <= Bit_Concat_out1_12 & Bit_Concat_out1_12;

  Bit_Concat2_out1_7 <= Bit_Concat1_out1_14 & Bit_Concat1_out1_14;

  Bit_Concat4_out1_7 <= Bit_Concat2_out1_7 & Bit_Concat2_out1_7;

  Bit_Concat3_out1_7 <= Bit_Concat4_out1_7 & Bit_Concat2_out1_7 & Bit_Concat1_out1_14 & Bit_Concat_out1_12;

  reinterpretcast_17_12_out1_7 <= signed(Bit_Concat3_out1_7);

  w_tmp2_out1_10 <= bitsll_w_1_out1_8 + DTC_out1_9;

  bitsra_w_1_out1_7 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_6, 8);

  Bitwise_XOR_out1_7 <= reinterpretcast_17_12_out1_7 XOR bitsra_w_1_out1_7;

  w_tmp2_out1_11 <= w_tmp2_out1_10 + Bitwise_XOR_out1_7;

  
  if_w_hat_0_75_1_out1_7 <= bitsll_w_1_out1_8 WHEN Logical_Operator1_out1_5 = '0' ELSE
      w_tmp2_out1_11;

  BitSlice_out1_9 <= unsigned(if_w_hat_0_75_1_out1_7(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_7 <= signed(BitSlice_out1_9);

  
  w_hat_0_75_out1_8 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_7 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_8 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_7 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_6 <= w_hat_0_75_out1_8 OR w_hat_0_5_out1_8;

  bitsll_w_1_out1_9 <= if_w_hat_0_75_1_out1_7 sll 1;

  BitSlice1_out1_8 <= if_w_hat_0_75_1_out1_7(29);

  Logical_Operator_out1_9 <=  NOT BitSlice1_out1_8;

  Constant1_out1_10 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_15 <= Logical_Operator_out1_9 & Logical_Operator_out1_9 & Logical_Operator_out1_9 & Constant1_out1_10 & Logical_Operator_out1_9;

  DTC_out1_10 <= signed(Bit_Concat1_out1_15);

  Bit_Concat_out1_13 <= unsigned'(Logical_Operator_out1_9 & Logical_Operator_out1_9);

  Bit_Concat1_out1_16 <= Bit_Concat_out1_13 & Bit_Concat_out1_13;

  Bit_Concat2_out1_8 <= Bit_Concat1_out1_16 & Bit_Concat1_out1_16;

  Bit_Concat4_out1_8 <= Bit_Concat2_out1_8 & Bit_Concat2_out1_8;

  Bit_Concat3_out1_8 <= Bit_Concat4_out1_8 & Bit_Concat2_out1_8 & Bit_Concat1_out1_16 & Bit_Concat_out1_13;

  reinterpretcast_17_12_out1_8 <= signed(Bit_Concat3_out1_8);

  w_tmp2_out1_12 <= bitsll_w_1_out1_9 + DTC_out1_10;

  bitsra_w_1_out1_8 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_7, 9);

  Bitwise_XOR_out1_8 <= reinterpretcast_17_12_out1_8 XOR bitsra_w_1_out1_8;

  w_tmp2_out1_13 <= w_tmp2_out1_12 + Bitwise_XOR_out1_8;

  
  if_w_hat_0_75_1_out1_8 <= bitsll_w_1_out1_9 WHEN Logical_Operator1_out1_6 = '0' ELSE
      w_tmp2_out1_13;

  BitSlice_out1_10 <= unsigned(if_w_hat_0_75_1_out1_8(29 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1_8 <= signed(BitSlice_out1_10);

  
  w_hat_0_75_out1_9 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_8 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_9 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_8 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator1_out1_7 <= w_hat_0_75_out1_9 OR w_hat_0_5_out1_9;

  bitsll_w_1_out1_10 <= if_w_hat_0_75_1_out1_8 sll 1;

  BitSlice1_out1_9 <= if_w_hat_0_75_1_out1_8(29);

  Logical_Operator_out1_10 <=  NOT BitSlice1_out1_9;

  Constant1_out1_11 <= to_unsigned(16#2000000#, 26);

  Bit_Concat1_out1_17 <= Logical_Operator_out1_10 & Logical_Operator_out1_10 & Logical_Operator_out1_10 & Constant1_out1_11 & Logical_Operator_out1_10;

  DTC_out1_11 <= signed(Bit_Concat1_out1_17);

  Bit_Concat_out1_14 <= unsigned'(Logical_Operator_out1_10 & Logical_Operator_out1_10);

  Bit_Concat1_out1_18 <= Bit_Concat_out1_14 & Bit_Concat_out1_14;

  Bit_Concat2_out1_9 <= Bit_Concat1_out1_18 & Bit_Concat1_out1_18;

  Bit_Concat4_out1_9 <= Bit_Concat2_out1_9 & Bit_Concat2_out1_9;

  Bit_Concat3_out1_9 <= Bit_Concat4_out1_9 & Bit_Concat2_out1_9 & Bit_Concat1_out1_18 & Bit_Concat_out1_14;

  reinterpretcast_17_12_out1_9 <= signed(Bit_Concat3_out1_9);

  w_tmp2_out1_14 <= bitsll_w_1_out1_10 + DTC_out1_11;

  bitsra_w_1_out1_9 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_8, 10);

  Bitwise_XOR_out1_9 <= reinterpretcast_17_12_out1_9 XOR bitsra_w_1_out1_9;

  w_tmp2_out1_15 <= w_tmp2_out1_14 + Bitwise_XOR_out1_9;

  
  if_w_hat_0_75_1_out1_9 <= bitsll_w_1_out1_10 WHEN Logical_Operator1_out1_7 = '0' ELSE
      w_tmp2_out1_15;

  
  w_0_out1 <= '1' WHEN if_w_hat_0_75_1_out1_9 /= to_signed(16#00000000#, 30) ELSE
      '0';

  Zero_out1 <= to_signed(0, 32);

  logTable_int32_3_out1 <= to_signed(119799282, 32);

  
  if_w_hat_0_5_out1 <= Zero_out1 WHEN w_hat_0_5_out1 = '0' ELSE
      logTable_int32_3_out1;

  logMinusTable_int32_3_out1 <= to_signed(-154448137, 32);

  
  if_w_hat_0_75_out1 <= if_w_hat_0_5_out1 WHEN w_hat_0_75_out1 = '0' ELSE
      logMinusTable_int32_3_out1;

  Constant1_out1_12 <= '0';

  Bit_Concat1_out1_19 <= unsigned(if_w_hat_0_75_out1) & Constant1_out1_12;

  DTC1_out1 <= signed(Bit_Concat1_out1_19);

  Zero_out1_1 <= to_signed(0, 33);

  Constant2_out1 <= to_signed(126468572, 33);

  
  if_w_hat_0_5_out1_1 <= Zero_out1_1 WHEN w_hat_0_5_out1_1 = '0' ELSE
      Constant2_out1;

  Constant3_out1 <= to_signed(-143378241, 33);

  
  if_w_hat_0_75_out1_1 <= if_w_hat_0_5_out1_1 WHEN w_hat_0_75_out1_1 = '0' ELSE
      Constant3_out1;

  L_logTable_3_1_out1 <= DTC1_out1 + if_w_hat_0_75_out1_1;

  Constant_out1_5 <= '0';

  Bit_Concat_out1_15 <= unsigned(L_logTable_3_1_out1) & Constant_out1_5;

  DTC_1_out1_1 <= signed(Bit_Concat_out1_15);

  Zero_out1_2 <= to_signed(0, 34);

  logTable_int32_4_out1 <= to_signed(130190384, 34);

  
  if_w_hat_0_5_out1_2 <= Zero_out1_2 WHEN w_hat_0_5_out1_2 = '0' ELSE
      logTable_int32_4_out1;

  logMinusTable_int32_4_out1 <= to_signed(-138595419, 34);

  
  if_w_hat_0_75_out1_2 <= if_w_hat_0_5_out1_2 WHEN w_hat_0_75_out1_2 = '0' ELSE
      logMinusTable_int32_4_out1;

  L_logTable_3_1_out1_1 <= DTC_1_out1_1 + if_w_hat_0_75_out1_2;

  Constant_out1_6 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1_16 <= unsigned(L_logTable_3_1_out1_1) & Constant_out1_6;

  reinterpretcast_bitsliceget_w_1_out1 <= signed(Bit_Concat_out1_16);

  Zero_out1_3 <= to_signed(0, 36);

  logTable_int32_4_out1_1 <= to_signed(264326535, 36);

  
  if_w_hat_0_5_out1_3 <= Zero_out1_3 WHEN w_hat_0_5_out1_3 = '0' ELSE
      logTable_int32_4_out1_1;

  logMinusTable_int32_4_out1_1 <= to_signed(-272719242, 36);

  
  if_w_hat_0_75_out1_3 <= if_w_hat_0_5_out1_3 WHEN w_hat_0_75_out1_3 = '0' ELSE
      logMinusTable_int32_4_out1_1;

  L_logTable_3_1_out1_2 <= reinterpretcast_bitsliceget_w_1_out1 + if_w_hat_0_75_out1_3;

  Constant_out1_7 <= '0';

  Bit_Concat_out1_17 <= unsigned(L_logTable_3_1_out1_2) & Constant_out1_7;

  reinterpretcast_bitsliceget_w_1_out1_1 <= signed(Bit_Concat_out1_17);

  Zero_out1_4 <= to_signed(0, 37);

  logTable_int32_4_out1_2 <= to_signed(266359896, 37);

  
  if_w_hat_0_5_out1_4 <= Zero_out1_4 WHEN w_hat_0_5_out1_4 = '0' ELSE
      logTable_int32_4_out1_2;

  logMinusTable_int32_4_out1_2 <= to_signed(-270554712, 37);

  
  if_w_hat_0_75_out1_4 <= if_w_hat_0_5_out1_4 WHEN w_hat_0_75_out1_4 = '0' ELSE
      logMinusTable_int32_4_out1_2;

  L_logTable_3_1_out1_3 <= reinterpretcast_bitsliceget_w_1_out1_1 + if_w_hat_0_75_out1_4;

  Constant_out1_8 <= '0';

  Bit_Concat_out1_18 <= unsigned(L_logTable_3_1_out1_3) & Constant_out1_8;

  reinterpretcast_bitsliceget_w_1_out1_2 <= signed(Bit_Concat_out1_18);

  Zero_out1_5 <= to_signed(0, 38);

  logTable_int32_4_out1_3 <= to_signed(267392310, 38);

  
  if_w_hat_0_5_out1_5 <= Zero_out1_5 WHEN w_hat_0_5_out1_5 = '0' ELSE
      logTable_int32_4_out1_3;

  logMinusTable_int32_4_out1_3 <= to_signed(-269489526, 38);

  
  if_w_hat_0_75_out1_5 <= if_w_hat_0_5_out1_5 WHEN w_hat_0_75_out1_5 = '0' ELSE
      logMinusTable_int32_4_out1_3;

  L_logTable_3_1_out1_4 <= reinterpretcast_bitsliceget_w_1_out1_2 + if_w_hat_0_75_out1_5;

  Constant_out1_9 <= '0';

  Bit_Concat_out1_19 <= unsigned(L_logTable_3_1_out1_4) & Constant_out1_9;

  reinterpretcast_bitsliceget_w_1_out1_3 <= signed(Bit_Concat_out1_19);

  Zero_out1_6 <= to_signed(0, 39);

  logTable_int32_4_out1_4 <= to_signed(267912529, 39);

  
  if_w_hat_0_5_out1_6 <= Zero_out1_6 WHEN w_hat_0_5_out1_6 = '0' ELSE
      logTable_int32_4_out1_4;

  logMinusTable_int32_4_out1_4 <= to_signed(-268961114, 39);

  
  if_w_hat_0_75_out1_6 <= if_w_hat_0_5_out1_6 WHEN w_hat_0_75_out1_6 = '0' ELSE
      logMinusTable_int32_4_out1_4;

  L_logTable_3_1_out1_5 <= reinterpretcast_bitsliceget_w_1_out1_3 + if_w_hat_0_75_out1_6;

  Constant_out1_10 <= '0';

  Bit_Concat_out1_20 <= unsigned(L_logTable_3_1_out1_5) & Constant_out1_10;

  reinterpretcast_bitsliceget_w_1_out1_4 <= signed(Bit_Concat_out1_20);

  Zero_out1_7 <= to_signed(0, 40);

  logTable_int32_4_out1_5 <= to_signed(268173653, 40);

  
  if_w_hat_0_5_out1_7 <= Zero_out1_7 WHEN w_hat_0_5_out1_7 = '0' ELSE
      logTable_int32_4_out1_5;

  logMinusTable_int32_4_out1_5 <= to_signed(-268697942, 40);

  
  if_w_hat_0_75_out1_7 <= if_w_hat_0_5_out1_7 WHEN w_hat_0_75_out1_7 = '0' ELSE
      logMinusTable_int32_4_out1_5;

  L_logTable_3_1_out1_6 <= reinterpretcast_bitsliceget_w_1_out1_4 + if_w_hat_0_75_out1_7;

  Constant_out1_11 <= '0';

  Bit_Concat_out1_21 <= unsigned(L_logTable_3_1_out1_6) & Constant_out1_11;

  reinterpretcast_bitsliceget_w_1_out1_5 <= signed(Bit_Concat_out1_21);

  Zero_out1_8 <= to_signed(0, 41);

  logTable_int32_4_out1_6 <= to_signed(268304469, 41);

  
  if_w_hat_0_5_out1_8 <= Zero_out1_8 WHEN w_hat_0_5_out1_8 = '0' ELSE
      logTable_int32_4_out1_6;

  logMinusTable_int32_4_out1_6 <= to_signed(-268566614, 41);

  
  if_w_hat_0_75_out1_8 <= if_w_hat_0_5_out1_8 WHEN w_hat_0_75_out1_8 = '0' ELSE
      logMinusTable_int32_4_out1_6;

  L_logTable_3_1_out1_7 <= reinterpretcast_bitsliceget_w_1_out1_5 + if_w_hat_0_75_out1_8;

  Zero_out1_9 <= to_signed(0, 41);

  logTable_int32_4_out1_7 <= to_signed(134184970, 41);

  
  if_w_hat_0_5_out1_9 <= Zero_out1_9 WHEN w_hat_0_5_out1_9 = '0' ELSE
      logTable_int32_4_out1_7;

  logMinusTable_int32_4_out1_7 <= to_signed(-134250507, 41);

  
  if_w_hat_0_75_out1_9 <= if_w_hat_0_5_out1_9 WHEN w_hat_0_75_out1_9 = '0' ELSE
      logMinusTable_int32_4_out1_7;

  L_logTable_10_out1 <= L_logTable_3_1_out1_7 + if_w_hat_0_75_out1_9;

  alpha0_out1_1 <= to_unsigned(16#000#, 9);

  Bit_Concat_out1_22 <= unsigned(L_logTable_10_out1) & alpha0_out1_1;

  reinterpretcast_bitconcat_L_f_out1 <= signed(Bit_Concat_out1_22);

  BitSlice_out1_11 <= if_w_hat_0_75_1_out1_9(29);

  alphaw_cast <= resize(if_w_hat_0_75_1_out1_9, 31);
  alphaw_cast_1 <=  - (alphaw_cast);
  alphaw_out1 <= alphaw_cast_1(29 DOWNTO 0);

  
  if_sign_1_out1 <= if_w_hat_0_75_1_out1_9 WHEN BitSlice_out1_11 = '0' ELSE
      alphaw_out1;

  
  w_abs_2_out1 <= '1' WHEN if_sign_1_out1 >= to_signed(16#04000000#, 30) ELSE
      '0';

  Bit_Slice_out1 <= unsigned(if_sign_1_out1(25 DOWNTO 0));

  Bit_Slice5_out1 <= Bit_Slice_out1(25);

  Bit_Slice3_out1 <= Bit_Slice_out1(24);

  Bit_Slice6_out1 <= Bit_Slice_out1(23);

  Logical_Operator_out1_11 <= Bit_Slice3_out1 OR Bit_Slice6_out1;

  Logical_Operator1_out1_8 <= Bit_Slice5_out1 OR Logical_Operator_out1_11;

  Bit_Slice2_out1 <= Bit_Slice_out1(22 DOWNTO 15);

  Bit_Slice7_out1 <= Bit_Slice2_out1(7);

  Bit_Slice6_out1_1 <= Bit_Slice2_out1(6);

  Logical_Operator3_out1 <= Bit_Slice7_out1 OR Bit_Slice6_out1_1;

  Bit_Slice5_out1_1 <= Bit_Slice2_out1(5);

  Bit_Slice3_out1_1 <= Bit_Slice2_out1(4);

  Logical_Operator_out1_12 <= Bit_Slice5_out1_1 OR Bit_Slice3_out1_1;

  Logical_Operator1_out1_9 <= Logical_Operator3_out1 OR Logical_Operator_out1_12;

  Bit_Slice2_out1_1 <= Bit_Slice2_out1(3);

  Bit_Slice1_out1 <= Bit_Slice2_out1(2);

  Logical_Operator4_out1 <= Bit_Slice2_out1_1 OR Bit_Slice1_out1;

  Bit_Slice_out1_1 <= Bit_Slice2_out1(1);

  Bit_Slice4_out1 <= Bit_Slice2_out1(0);

  Logical_Operator2_out1_2 <= Bit_Slice_out1_1 OR Bit_Slice4_out1;

  Logical_Operator5_out1 <= Logical_Operator4_out1 OR Logical_Operator2_out1_2;

  Logical_Operator6_out1 <= Logical_Operator1_out1_9 OR Logical_Operator5_out1;

  Bit_Slice1_out1_1 <= Bit_Slice_out1(14 DOWNTO 7);

  Bit_Slice7_out1_1 <= Bit_Slice1_out1_1(7);

  Bit_Slice6_out1_2 <= Bit_Slice1_out1_1(6);

  Logical_Operator3_out1_1 <= Bit_Slice7_out1_1 OR Bit_Slice6_out1_2;

  Bit_Slice5_out1_2 <= Bit_Slice1_out1_1(5);

  Bit_Slice3_out1_2 <= Bit_Slice1_out1_1(4);

  Logical_Operator_out1_13 <= Bit_Slice5_out1_2 OR Bit_Slice3_out1_2;

  Logical_Operator1_out1_10 <= Logical_Operator3_out1_1 OR Logical_Operator_out1_13;

  Bit_Slice2_out1_2 <= Bit_Slice1_out1_1(3);

  Bit_Slice1_out1_2 <= Bit_Slice1_out1_1(2);

  Logical_Operator4_out1_1 <= Bit_Slice2_out1_2 OR Bit_Slice1_out1_2;

  Bit_Slice_out1_2 <= Bit_Slice1_out1_1(1);

  Bit_Slice4_out1_1 <= Bit_Slice1_out1_1(0);

  Logical_Operator2_out1_3 <= Bit_Slice_out1_2 OR Bit_Slice4_out1_1;

  Logical_Operator5_out1_1 <= Logical_Operator4_out1_1 OR Logical_Operator2_out1_3;

  Bit_Slice4_out1_2 <= Bit_Slice_out1(6 DOWNTO 0);

  Bit_Slice7_out1_2 <= Bit_Slice4_out1_2(6);

  Bit_Slice6_out1_3 <= Bit_Slice4_out1_2(5);

  Logical_Operator3_out1_2 <= Bit_Slice7_out1_2 OR Bit_Slice6_out1_3;

  Bit_Slice5_out1_3 <= Bit_Slice4_out1_2(4);

  Bit_Slice3_out1_3 <= Bit_Slice4_out1_2(3);

  Logical_Operator_out1_14 <= Bit_Slice5_out1_3 OR Bit_Slice3_out1_3;

  Bit_Slice2_out1_3 <= Bit_Slice4_out1_2(2);

  Bit_Slice1_out1_3 <= Bit_Slice4_out1_2(1);

  Bit_Slice_out1_3 <= Bit_Slice4_out1_2(0);

  Start_out1 <= to_signed(16#1A#, 8);

  Logical_Operator4_out1_2 <= Bit_Slice2_out1_3 OR Bit_Slice1_out1_3;

  Start_1_out1 <= to_signed(16#19#, 8);

  
  Switch_out1_1 <= Start_out1 WHEN Bit_Slice_out1_3 = '0' ELSE
      Start_1_out1;

  Start_2_out1 <= to_signed(16#18#, 8);

  Start_3_out1 <= to_signed(16#17#, 8);

  Logical_Operator1_out1_11 <= Logical_Operator3_out1_2 OR Logical_Operator_out1_14;

  
  Switch2_out1 <= Start_2_out1 WHEN Bit_Slice2_out1_3 = '0' ELSE
      Start_3_out1;

  
  Switch1_out1_1 <= Switch_out1_1 WHEN Logical_Operator4_out1_2 = '0' ELSE
      Switch2_out1;

  Start_4_out1 <= to_signed(16#16#, 8);

  Start_5_out1 <= to_signed(16#15#, 8);

  
  Switch5_out1 <= Start_4_out1 WHEN Bit_Slice5_out1_3 = '0' ELSE
      Start_5_out1;

  Start_6_out1 <= to_signed(16#14#, 8);

  Start_7_out1 <= to_signed(16#13#, 8);

  
  Switch7_out1 <= Start_6_out1 WHEN Bit_Slice7_out1_2 = '0' ELSE
      Start_7_out1;

  Logical_Operator6_out1_1 <= Logical_Operator1_out1_10 OR Logical_Operator5_out1_1;

  
  Switch6_out1 <= Switch5_out1 WHEN Logical_Operator3_out1_2 = '0' ELSE
      Switch7_out1;

  
  Switch4_out1 <= Switch1_out1_1 WHEN Logical_Operator1_out1_11 = '0' ELSE
      Switch6_out1;

  Start_out1_1 <= to_signed(16#12#, 8);

  Start_1_out1_1 <= to_signed(16#11#, 8);

  
  Switch_out1_2 <= Start_out1_1 WHEN Bit_Slice_out1_2 = '0' ELSE
      Start_1_out1_1;

  Start_2_out1_1 <= to_signed(16#10#, 8);

  Start_3_out1_1 <= to_signed(16#0F#, 8);

  
  Switch2_out1_1 <= Start_2_out1_1 WHEN Bit_Slice2_out1_2 = '0' ELSE
      Start_3_out1_1;

  
  Switch1_out1_2 <= Switch_out1_2 WHEN Logical_Operator4_out1_1 = '0' ELSE
      Switch2_out1_1;

  Start_4_out1_1 <= to_signed(16#0E#, 8);

  Start_5_out1_1 <= to_signed(16#0D#, 8);

  
  Switch5_out1_1 <= Start_4_out1_1 WHEN Bit_Slice5_out1_2 = '0' ELSE
      Start_5_out1_1;

  Start_6_out1_1 <= to_signed(16#0C#, 8);

  Start_7_out1_1 <= to_signed(16#0B#, 8);

  
  Switch7_out1_1 <= Start_6_out1_1 WHEN Bit_Slice7_out1_1 = '0' ELSE
      Start_7_out1_1;

  
  Switch6_out1_1 <= Switch5_out1_1 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch7_out1_1;

  Logical_Operator2_out1_4 <= Logical_Operator1_out1_8 OR Logical_Operator6_out1;

  
  Switch4_out1_1 <= Switch1_out1_2 WHEN Logical_Operator1_out1_10 = '0' ELSE
      Switch6_out1_1;

  
  Switch33_out1 <= Switch4_out1 WHEN Logical_Operator6_out1_1 = '0' ELSE
      Switch4_out1_1;

  Start_out1_2 <= to_signed(16#0A#, 8);

  Start_1_out1_2 <= to_signed(16#09#, 8);

  
  Switch_out1_3 <= Start_out1_2 WHEN Bit_Slice_out1_1 = '0' ELSE
      Start_1_out1_2;

  Start_2_out1_2 <= to_signed(16#08#, 8);

  Start_3_out1_2 <= to_signed(16#07#, 8);

  
  Switch2_out1_2 <= Start_2_out1_2 WHEN Bit_Slice2_out1_1 = '0' ELSE
      Start_3_out1_2;

  
  Switch1_out1_3 <= Switch_out1_3 WHEN Logical_Operator4_out1 = '0' ELSE
      Switch2_out1_2;

  Start_4_out1_2 <= to_signed(16#06#, 8);

  Start_5_out1_2 <= to_signed(16#05#, 8);

  
  Switch5_out1_2 <= Start_4_out1_2 WHEN Bit_Slice5_out1_1 = '0' ELSE
      Start_5_out1_2;

  Start_6_out1_2 <= to_signed(16#04#, 8);

  Start_7_out1_2 <= to_signed(16#03#, 8);

  
  Switch7_out1_2 <= Start_6_out1_2 WHEN Bit_Slice7_out1 = '0' ELSE
      Start_7_out1_2;

  
  Switch6_out1_2 <= Switch5_out1_2 WHEN Logical_Operator3_out1 = '0' ELSE
      Switch7_out1_2;

  
  Switch4_out1_2 <= Switch1_out1_3 WHEN Logical_Operator1_out1_9 = '0' ELSE
      Switch6_out1_2;

  alpha24_out1 <= to_signed(16#02#, 8);

  alpha25_out1 <= to_signed(16#01#, 8);

  
  Switch7_out1_3 <= alpha24_out1 WHEN Bit_Slice3_out1 = '0' ELSE
      alpha25_out1;

  alpha26_out1 <= to_signed(16#00#, 8);

  
  Switch1_out1_4 <= Switch7_out1_3 WHEN Bit_Slice5_out1 = '0' ELSE
      alpha26_out1;

  
  Switch2_out1_3 <= Switch4_out1_2 WHEN Logical_Operator1_out1_8 = '0' ELSE
      Switch1_out1_4;

  
  Switch34_out1 <= Switch33_out1 WHEN Logical_Operator2_out1_4 = '0' ELSE
      Switch2_out1_3;

  bitsll_w_abs_j_zerosig <= to_signed(16#00#, 8);

  
  bitsll_w_abs_j_selsig <= Switch34_out1 WHEN Switch34_out1 >= bitsll_w_abs_j_zerosig ELSE
      bitsll_w_abs_j_zerosig;

  bitsll_w_abs_j_zerosig_1 <= to_signed(16#00#, 8);

  
  bitsll_w_abs_j_selsig_1 <= bitsll_w_abs_j_selsig WHEN bitsll_w_abs_j_selsig >= bitsll_w_abs_j_zerosig_1 ELSE
      bitsll_w_abs_j_zerosig_1;

  bitsll_w_abs_j_out1 <= if_sign_1_out1 sll to_integer(bitsll_w_abs_j_selsig_1);

  bitsra_w_abs_1_out1 <= SHIFT_RIGHT(if_sign_1_out1, 1);

  alpha1_out1_1 <= to_signed(16#02000000#, 30);

  
  if_w_abs_2_1_out1 <= bitsll_w_abs_j_out1 WHEN w_abs_2_out1 = '0' ELSE
      bitsra_w_abs_1_out1;

  BitSlice1_out1_10 <= unsigned(if_w_abs_2_1_out1(25 DOWNTO 0));

  DTC_1_out1_2 <= BitSlice1_out1_10;

  bitsra_w_cfType_Log2NumberOfI_out1 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_9, 13);

  alpha1_tmp1_out1 <= alpha1_out1_1 - bitsra_w_cfType_Log2NumberOfI_out1;

  BitSlice2_out1 <= unsigned(alpha1_tmp1_out1(25 DOWNTO 0));

  reinterpretcast_bitsliceget_tm_out1 <= BitSlice2_out1;

  tmp_m1_tmp_m2_out1 <= DTC_1_out1_2 * reinterpretcast_bitsliceget_tm_out1;

  DTC_out1_12 <= signed(resize(tmp_m1_tmp_m2_out1(51 DOWNTO 3), 50));

  alphaw1_cast <= resize(DTC_out1_12, 51);
  alphaw1_cast_1 <=  - (alphaw1_cast);
  alphaw1_out1 <= alphaw1_cast_1(49 DOWNTO 0);

  cfType_Log2NumberOfIterations_out1 <= to_signed(16#0C#, 8);

  C_out1_3 <= to_signed(-16#01#, 8);

  
  if_w_abs_2_out1 <= Switch34_out1 WHEN w_abs_2_out1 = '0' ELSE
      C_out1_3;

  cfType_Log2NumberOfIterations_out1_1 <= cfType_Log2NumberOfIterations_out1 + if_w_abs_2_out1;

  bitsra_appx_shift_zerosig <= to_signed(16#00#, 8);

  
  bitsra_appx_shift_selsig <= cfType_Log2NumberOfIterations_out1_1 WHEN cfType_Log2NumberOfIterations_out1_1 >= bitsra_appx_shift_zerosig ELSE
      bitsra_appx_shift_zerosig;

  
  Switch_out1_4 <= DTC_out1_12 WHEN BitSlice_out1_11 = '0' ELSE
      alphaw1_out1;

  bitsra_appx_shift_zerosig_1 <= to_signed(16#00#, 8);

  
  bitsra_appx_shift_selsig_1 <= bitsra_appx_shift_selsig WHEN bitsra_appx_shift_selsig >= bitsra_appx_shift_zerosig_1 ELSE
      bitsra_appx_shift_zerosig_1;

  bitsra_appx_shift_out1 <= SHIFT_RIGHT(Switch_out1_4, to_integer(bitsra_appx_shift_selsig_1));

  L_tmp4_out1 <= reinterpretcast_bitconcat_L_f_out1 - bitsra_appx_shift_out1;

  
  if_w_0_out1 <= reinterpretcast_bitconcat_L_f_out1 WHEN w_0_out1 = '0' ELSE
      L_tmp4_out1;

  BitSlice_out1_12 <= if_w_0_out1(49);

  
  bitget_L_L_WordLength_0_out1 <= '1' WHEN BitSlice_out1_12 = '0' ELSE
      '0';

  alpha1_out1_2 <= to_signed(-16#01#, 8);

  alpha1_out1_3 <= to_signed(16#00#, 8);

  
  if_bitget_L_L_WordLength_0_out1 <= alpha1_out1_2 WHEN bitget_L_L_WordLength_0_out1 = '0' ELSE
      alpha1_out1_3;

  Constant2_out1_1 <= signed'("0000000000010110001011100100001011111110111110100011100111");

  
  Switch_out1_5 <= Switch1_out1 WHEN Compare_To_Constant_out1 = '0' ELSE
      Constant2_out1_1;

  Bit_Concat1_out1_20 <= unsigned(if_bitget_L_L_WordLength_0_out1) & unsigned(if_w_0_out1);

  reinterpretcast_bitconcat_fi_0_out1 <= signed(Bit_Concat1_out1_20);

  exp_tmp_L_out1 <= Switch_out1_5 - reinterpretcast_bitconcat_fi_0_out1;

  BitSlice_out1_13 <= exp_tmp_L_out1(57);

  C4_out1 <= '1';

  
  if_aExponent_0_2_out1 <= aSign WHEN alphaaExponent_0_aMantissa_out1 = '0' ELSE
      C4_out1;

  
  Switch_out1_6 <= BitSlice_out1_13 WHEN Logical_Operator_out1 = '0' ELSE
      if_aExponent_0_2_out1;

  
  Switch1_out1_5 <= Constant1_out1_1 WHEN Constant1_out1 = '0' ELSE
      Switch_out1_6;

  Constant3_out1_1 <= to_unsigned(16#00#, 8);

  Unary_Minus_cast <= resize(exp_tmp_L_out1, 59);
  Unary_Minus_cast_1 <=  - (Unary_Minus_cast);
  Unary_Minus_out1 <= Unary_Minus_cast_1(57 DOWNTO 0);

  
  Switch_out1_7 <= exp_tmp_L_out1 WHEN BitSlice_out1_13 = '0' ELSE
      Unary_Minus_out1;

  BitSlice1_out1_11 <= unsigned(Switch_out1_7(56 DOWNTO 0));

  Bit_Slice9_out1 <= BitSlice1_out1_11(56);

  Bit_Slice8_out1 <= BitSlice1_out1_11(55);

  Logical_Operator3_out1_3 <= Bit_Slice9_out1 OR Bit_Slice8_out1;

  Bit_Slice7_out1_3 <= BitSlice1_out1_11(54 DOWNTO 47);

  Bit_Slice7_out1_4 <= Bit_Slice7_out1_3(7);

  Bit_Slice6_out1_4 <= Bit_Slice7_out1_3(6);

  Logical_Operator3_out1_4 <= Bit_Slice7_out1_4 OR Bit_Slice6_out1_4;

  Bit_Slice5_out1_4 <= Bit_Slice7_out1_3(5);

  Bit_Slice3_out1_4 <= Bit_Slice7_out1_3(4);

  Logical_Operator_out1_15 <= Bit_Slice5_out1_4 OR Bit_Slice3_out1_4;

  Logical_Operator1_out1_12 <= Logical_Operator3_out1_4 OR Logical_Operator_out1_15;

  Bit_Slice2_out1_4 <= Bit_Slice7_out1_3(3);

  Bit_Slice1_out1_4 <= Bit_Slice7_out1_3(2);

  Logical_Operator4_out1_3 <= Bit_Slice2_out1_4 OR Bit_Slice1_out1_4;

  Bit_Slice_out1_4 <= Bit_Slice7_out1_3(1);

  Bit_Slice4_out1_3 <= Bit_Slice7_out1_3(0);

  Logical_Operator2_out1_5 <= Bit_Slice_out1_4 OR Bit_Slice4_out1_3;

  Logical_Operator5_out1_2 <= Logical_Operator4_out1_3 OR Logical_Operator2_out1_5;

  Logical_Operator6_out1_2 <= Logical_Operator1_out1_12 OR Logical_Operator5_out1_2;

  Logical_Operator4_out1_4 <= Logical_Operator3_out1_3 OR Logical_Operator6_out1_2;

  Bit_Slice6_out1_5 <= BitSlice1_out1_11(46 DOWNTO 39);

  Bit_Slice7_out1_5 <= Bit_Slice6_out1_5(7);

  Bit_Slice6_out1_6 <= Bit_Slice6_out1_5(6);

  Logical_Operator3_out1_5 <= Bit_Slice7_out1_5 OR Bit_Slice6_out1_6;

  Bit_Slice5_out1_5 <= Bit_Slice6_out1_5(5);

  Bit_Slice3_out1_5 <= Bit_Slice6_out1_5(4);

  Logical_Operator_out1_16 <= Bit_Slice5_out1_5 OR Bit_Slice3_out1_5;

  Logical_Operator1_out1_13 <= Logical_Operator3_out1_5 OR Logical_Operator_out1_16;

  Bit_Slice2_out1_5 <= Bit_Slice6_out1_5(3);

  Bit_Slice1_out1_5 <= Bit_Slice6_out1_5(2);

  Logical_Operator4_out1_5 <= Bit_Slice2_out1_5 OR Bit_Slice1_out1_5;

  Bit_Slice_out1_5 <= Bit_Slice6_out1_5(1);

  Bit_Slice4_out1_4 <= Bit_Slice6_out1_5(0);

  Logical_Operator2_out1_6 <= Bit_Slice_out1_5 OR Bit_Slice4_out1_4;

  Logical_Operator5_out1_3 <= Logical_Operator4_out1_5 OR Logical_Operator2_out1_6;

  Logical_Operator6_out1_3 <= Logical_Operator1_out1_13 OR Logical_Operator5_out1_3;

  Bit_Slice5_out1_6 <= BitSlice1_out1_11(38 DOWNTO 31);

  Bit_Slice7_out1_6 <= Bit_Slice5_out1_6(7);

  Bit_Slice6_out1_7 <= Bit_Slice5_out1_6(6);

  Logical_Operator3_out1_6 <= Bit_Slice7_out1_6 OR Bit_Slice6_out1_7;

  Bit_Slice5_out1_7 <= Bit_Slice5_out1_6(5);

  Bit_Slice3_out1_6 <= Bit_Slice5_out1_6(4);

  Logical_Operator_out1_17 <= Bit_Slice5_out1_7 OR Bit_Slice3_out1_6;

  Logical_Operator1_out1_14 <= Logical_Operator3_out1_6 OR Logical_Operator_out1_17;

  Bit_Slice2_out1_6 <= Bit_Slice5_out1_6(3);

  Bit_Slice1_out1_6 <= Bit_Slice5_out1_6(2);

  Logical_Operator4_out1_6 <= Bit_Slice2_out1_6 OR Bit_Slice1_out1_6;

  Bit_Slice_out1_6 <= Bit_Slice5_out1_6(1);

  Bit_Slice4_out1_5 <= Bit_Slice5_out1_6(0);

  Logical_Operator2_out1_7 <= Bit_Slice_out1_6 OR Bit_Slice4_out1_5;

  Logical_Operator5_out1_4 <= Logical_Operator4_out1_6 OR Logical_Operator2_out1_7;

  Logical_Operator6_out1_4 <= Logical_Operator1_out1_14 OR Logical_Operator5_out1_4;

  Logical_Operator1_out1_15 <= Logical_Operator6_out1_3 OR Logical_Operator6_out1_4;

  Bit_Slice3_out1_7 <= BitSlice1_out1_11(30 DOWNTO 23);

  Bit_Slice7_out1_7 <= Bit_Slice3_out1_7(7);

  Bit_Slice6_out1_8 <= Bit_Slice3_out1_7(6);

  Logical_Operator3_out1_7 <= Bit_Slice7_out1_7 OR Bit_Slice6_out1_8;

  Bit_Slice5_out1_8 <= Bit_Slice3_out1_7(5);

  Bit_Slice3_out1_8 <= Bit_Slice3_out1_7(4);

  Logical_Operator_out1_18 <= Bit_Slice5_out1_8 OR Bit_Slice3_out1_8;

  Logical_Operator1_out1_16 <= Logical_Operator3_out1_7 OR Logical_Operator_out1_18;

  Bit_Slice2_out1_7 <= Bit_Slice3_out1_7(3);

  Bit_Slice1_out1_7 <= Bit_Slice3_out1_7(2);

  Logical_Operator4_out1_7 <= Bit_Slice2_out1_7 OR Bit_Slice1_out1_7;

  Bit_Slice_out1_7 <= Bit_Slice3_out1_7(1);

  Bit_Slice4_out1_6 <= Bit_Slice3_out1_7(0);

  Logical_Operator2_out1_8 <= Bit_Slice_out1_7 OR Bit_Slice4_out1_6;

  Logical_Operator5_out1_5 <= Logical_Operator4_out1_7 OR Logical_Operator2_out1_8;

  Logical_Operator6_out1_5 <= Logical_Operator1_out1_16 OR Logical_Operator5_out1_5;

  Bit_Slice2_out1_8 <= BitSlice1_out1_11(22 DOWNTO 15);

  Bit_Slice7_out1_8 <= Bit_Slice2_out1_8(7);

  Bit_Slice6_out1_9 <= Bit_Slice2_out1_8(6);

  Logical_Operator3_out1_8 <= Bit_Slice7_out1_8 OR Bit_Slice6_out1_9;

  Bit_Slice5_out1_9 <= Bit_Slice2_out1_8(5);

  Bit_Slice3_out1_9 <= Bit_Slice2_out1_8(4);

  Logical_Operator_out1_19 <= Bit_Slice5_out1_9 OR Bit_Slice3_out1_9;

  Logical_Operator1_out1_17 <= Logical_Operator3_out1_8 OR Logical_Operator_out1_19;

  Bit_Slice2_out1_9 <= Bit_Slice2_out1_8(3);

  Bit_Slice1_out1_8 <= Bit_Slice2_out1_8(2);

  Logical_Operator4_out1_8 <= Bit_Slice2_out1_9 OR Bit_Slice1_out1_8;

  Bit_Slice_out1_8 <= Bit_Slice2_out1_8(1);

  Bit_Slice4_out1_7 <= Bit_Slice2_out1_8(0);

  Logical_Operator2_out1_9 <= Bit_Slice_out1_8 OR Bit_Slice4_out1_7;

  Logical_Operator5_out1_6 <= Logical_Operator4_out1_8 OR Logical_Operator2_out1_9;

  Logical_Operator6_out1_6 <= Logical_Operator1_out1_17 OR Logical_Operator5_out1_6;

  Bit_Slice1_out1_9 <= BitSlice1_out1_11(14 DOWNTO 7);

  Bit_Slice7_out1_9 <= Bit_Slice1_out1_9(7);

  Bit_Slice6_out1_10 <= Bit_Slice1_out1_9(6);

  Logical_Operator3_out1_9 <= Bit_Slice7_out1_9 OR Bit_Slice6_out1_10;

  Bit_Slice5_out1_10 <= Bit_Slice1_out1_9(5);

  Bit_Slice3_out1_10 <= Bit_Slice1_out1_9(4);

  Logical_Operator_out1_20 <= Bit_Slice5_out1_10 OR Bit_Slice3_out1_10;

  Logical_Operator1_out1_18 <= Logical_Operator3_out1_9 OR Logical_Operator_out1_20;

  Bit_Slice2_out1_10 <= Bit_Slice1_out1_9(3);

  Bit_Slice1_out1_10 <= Bit_Slice1_out1_9(2);

  Logical_Operator4_out1_9 <= Bit_Slice2_out1_10 OR Bit_Slice1_out1_10;

  Bit_Slice_out1_9 <= Bit_Slice1_out1_9(1);

  Bit_Slice4_out1_8 <= Bit_Slice1_out1_9(0);

  Logical_Operator2_out1_10 <= Bit_Slice_out1_9 OR Bit_Slice4_out1_8;

  Logical_Operator5_out1_7 <= Logical_Operator4_out1_9 OR Logical_Operator2_out1_10;

  Bit_Slice4_out1_9 <= BitSlice1_out1_11(6 DOWNTO 0);

  Bit_Slice7_out1_10 <= Bit_Slice4_out1_9(6);

  Bit_Slice6_out1_11 <= Bit_Slice4_out1_9(5);

  Logical_Operator3_out1_10 <= Bit_Slice7_out1_10 OR Bit_Slice6_out1_11;

  Bit_Slice5_out1_11 <= Bit_Slice4_out1_9(4);

  Bit_Slice3_out1_11 <= Bit_Slice4_out1_9(3);

  Logical_Operator_out1_21 <= Bit_Slice5_out1_11 OR Bit_Slice3_out1_11;

  Bit_Slice2_out1_11 <= Bit_Slice4_out1_9(2);

  Bit_Slice1_out1_11 <= Bit_Slice4_out1_9(1);

  Bit_Slice_out1_10 <= Bit_Slice4_out1_9(0);

  Start_out1_3 <= to_signed(16#39#, 8);

  Logical_Operator4_out1_10 <= Bit_Slice2_out1_11 OR Bit_Slice1_out1_11;

  Start_1_out1_3 <= to_signed(16#38#, 8);

  
  Switch_out1_8 <= Start_out1_3 WHEN Bit_Slice_out1_10 = '0' ELSE
      Start_1_out1_3;

  Start_2_out1_3 <= to_signed(16#37#, 8);

  Start_3_out1_3 <= to_signed(16#36#, 8);

  Logical_Operator1_out1_19 <= Logical_Operator3_out1_10 OR Logical_Operator_out1_21;

  
  Switch2_out1_4 <= Start_2_out1_3 WHEN Bit_Slice2_out1_11 = '0' ELSE
      Start_3_out1_3;

  
  Switch1_out1_6 <= Switch_out1_8 WHEN Logical_Operator4_out1_10 = '0' ELSE
      Switch2_out1_4;

  Start_4_out1_3 <= to_signed(16#35#, 8);

  Start_5_out1_3 <= to_signed(16#34#, 8);

  
  Switch5_out1_3 <= Start_4_out1_3 WHEN Bit_Slice5_out1_11 = '0' ELSE
      Start_5_out1_3;

  Start_6_out1_3 <= to_signed(16#33#, 8);

  Start_7_out1_3 <= to_signed(16#32#, 8);

  
  Switch7_out1_4 <= Start_6_out1_3 WHEN Bit_Slice7_out1_10 = '0' ELSE
      Start_7_out1_3;

  Logical_Operator6_out1_7 <= Logical_Operator1_out1_18 OR Logical_Operator5_out1_7;

  
  Switch6_out1_3 <= Switch5_out1_3 WHEN Logical_Operator3_out1_10 = '0' ELSE
      Switch7_out1_4;

  
  Switch4_out1_3 <= Switch1_out1_6 WHEN Logical_Operator1_out1_19 = '0' ELSE
      Switch6_out1_3;

  Start_out1_4 <= to_signed(16#31#, 8);

  Start_1_out1_4 <= to_signed(16#30#, 8);

  
  Switch_out1_9 <= Start_out1_4 WHEN Bit_Slice_out1_9 = '0' ELSE
      Start_1_out1_4;

  Start_2_out1_4 <= to_signed(16#2F#, 8);

  Start_3_out1_4 <= to_signed(16#2E#, 8);

  
  Switch2_out1_5 <= Start_2_out1_4 WHEN Bit_Slice2_out1_10 = '0' ELSE
      Start_3_out1_4;

  
  Switch1_out1_7 <= Switch_out1_9 WHEN Logical_Operator4_out1_9 = '0' ELSE
      Switch2_out1_5;

  Start_4_out1_4 <= to_signed(16#2D#, 8);

  Start_5_out1_4 <= to_signed(16#2C#, 8);

  
  Switch5_out1_4 <= Start_4_out1_4 WHEN Bit_Slice5_out1_10 = '0' ELSE
      Start_5_out1_4;

  Start_6_out1_4 <= to_signed(16#2B#, 8);

  Start_7_out1_4 <= to_signed(16#2A#, 8);

  
  Switch7_out1_5 <= Start_6_out1_4 WHEN Bit_Slice7_out1_9 = '0' ELSE
      Start_7_out1_4;

  
  Switch6_out1_4 <= Switch5_out1_4 WHEN Logical_Operator3_out1_9 = '0' ELSE
      Switch7_out1_5;

  Logical_Operator2_out1_11 <= Logical_Operator6_out1_5 OR Logical_Operator6_out1_6;

  
  Switch4_out1_4 <= Switch1_out1_7 WHEN Logical_Operator1_out1_18 = '0' ELSE
      Switch6_out1_4;

  
  Switch33_out1_1 <= Switch4_out1_3 WHEN Logical_Operator6_out1_7 = '0' ELSE
      Switch4_out1_4;

  Start_out1_5 <= to_signed(16#29#, 8);

  Start_1_out1_5 <= to_signed(16#28#, 8);

  
  Switch_out1_10 <= Start_out1_5 WHEN Bit_Slice_out1_8 = '0' ELSE
      Start_1_out1_5;

  Start_2_out1_5 <= to_signed(16#27#, 8);

  Start_3_out1_5 <= to_signed(16#26#, 8);

  
  Switch2_out1_6 <= Start_2_out1_5 WHEN Bit_Slice2_out1_9 = '0' ELSE
      Start_3_out1_5;

  
  Switch1_out1_8 <= Switch_out1_10 WHEN Logical_Operator4_out1_8 = '0' ELSE
      Switch2_out1_6;

  Start_4_out1_5 <= to_signed(16#25#, 8);

  Start_5_out1_5 <= to_signed(16#24#, 8);

  
  Switch5_out1_5 <= Start_4_out1_5 WHEN Bit_Slice5_out1_9 = '0' ELSE
      Start_5_out1_5;

  Start_6_out1_5 <= to_signed(16#23#, 8);

  Start_7_out1_5 <= to_signed(16#22#, 8);

  
  Switch7_out1_6 <= Start_6_out1_5 WHEN Bit_Slice7_out1_8 = '0' ELSE
      Start_7_out1_5;

  
  Switch6_out1_5 <= Switch5_out1_5 WHEN Logical_Operator3_out1_8 = '0' ELSE
      Switch7_out1_6;

  
  Switch4_out1_5 <= Switch1_out1_8 WHEN Logical_Operator1_out1_17 = '0' ELSE
      Switch6_out1_5;

  Start_out1_6 <= to_signed(16#21#, 8);

  Start_1_out1_6 <= to_signed(16#20#, 8);

  
  Switch_out1_11 <= Start_out1_6 WHEN Bit_Slice_out1_7 = '0' ELSE
      Start_1_out1_6;

  Start_2_out1_6 <= to_signed(16#1F#, 8);

  Start_3_out1_6 <= to_signed(16#1E#, 8);

  
  Switch2_out1_7 <= Start_2_out1_6 WHEN Bit_Slice2_out1_7 = '0' ELSE
      Start_3_out1_6;

  
  Switch1_out1_9 <= Switch_out1_11 WHEN Logical_Operator4_out1_7 = '0' ELSE
      Switch2_out1_7;

  Start_4_out1_6 <= to_signed(16#1D#, 8);

  Start_5_out1_6 <= to_signed(16#1C#, 8);

  
  Switch5_out1_6 <= Start_4_out1_6 WHEN Bit_Slice5_out1_8 = '0' ELSE
      Start_5_out1_6;

  Start_6_out1_6 <= to_signed(16#1B#, 8);

  Start_7_out1_6 <= to_signed(16#1A#, 8);

  
  Switch7_out1_7 <= Start_6_out1_6 WHEN Bit_Slice7_out1_7 = '0' ELSE
      Start_7_out1_6;

  
  Switch6_out1_6 <= Switch5_out1_6 WHEN Logical_Operator3_out1_7 = '0' ELSE
      Switch7_out1_7;

  
  Switch4_out1_6 <= Switch1_out1_9 WHEN Logical_Operator1_out1_16 = '0' ELSE
      Switch6_out1_6;

  Logical_Operator5_out1_8 <= Logical_Operator4_out1_4 OR Logical_Operator1_out1_15;

  
  Switch2_out1_8 <= Switch4_out1_5 WHEN Logical_Operator6_out1_5 = '0' ELSE
      Switch4_out1_6;

  
  Switch34_out1_1 <= Switch33_out1_1 WHEN Logical_Operator2_out1_11 = '0' ELSE
      Switch2_out1_8;

  Start_out1_7 <= to_signed(16#19#, 8);

  Start_1_out1_7 <= to_signed(16#18#, 8);

  
  Switch_out1_12 <= Start_out1_7 WHEN Bit_Slice_out1_6 = '0' ELSE
      Start_1_out1_7;

  Start_2_out1_7 <= to_signed(16#17#, 8);

  Start_3_out1_7 <= to_signed(16#16#, 8);

  
  Switch2_out1_9 <= Start_2_out1_7 WHEN Bit_Slice2_out1_6 = '0' ELSE
      Start_3_out1_7;

  
  Switch1_out1_10 <= Switch_out1_12 WHEN Logical_Operator4_out1_6 = '0' ELSE
      Switch2_out1_9;

  Start_4_out1_7 <= to_signed(16#15#, 8);

  Start_5_out1_7 <= to_signed(16#14#, 8);

  
  Switch5_out1_7 <= Start_4_out1_7 WHEN Bit_Slice5_out1_7 = '0' ELSE
      Start_5_out1_7;

  Start_6_out1_7 <= to_signed(16#13#, 8);

  Start_7_out1_7 <= to_signed(16#12#, 8);

  
  Switch7_out1_8 <= Start_6_out1_7 WHEN Bit_Slice7_out1_6 = '0' ELSE
      Start_7_out1_7;

  
  Switch6_out1_7 <= Switch5_out1_7 WHEN Logical_Operator3_out1_6 = '0' ELSE
      Switch7_out1_8;

  
  Switch4_out1_7 <= Switch1_out1_10 WHEN Logical_Operator1_out1_14 = '0' ELSE
      Switch6_out1_7;

  Start_out1_8 <= to_signed(16#11#, 8);

  Start_1_out1_8 <= to_signed(16#10#, 8);

  
  Switch_out1_13 <= Start_out1_8 WHEN Bit_Slice_out1_5 = '0' ELSE
      Start_1_out1_8;

  Start_2_out1_8 <= to_signed(16#0F#, 8);

  Start_3_out1_8 <= to_signed(16#0E#, 8);

  
  Switch2_out1_10 <= Start_2_out1_8 WHEN Bit_Slice2_out1_5 = '0' ELSE
      Start_3_out1_8;

  
  Switch1_out1_11 <= Switch_out1_13 WHEN Logical_Operator4_out1_5 = '0' ELSE
      Switch2_out1_10;

  Start_4_out1_8 <= to_signed(16#0D#, 8);

  Start_5_out1_8 <= to_signed(16#0C#, 8);

  
  Switch5_out1_8 <= Start_4_out1_8 WHEN Bit_Slice5_out1_5 = '0' ELSE
      Start_5_out1_8;

  Start_6_out1_8 <= to_signed(16#0B#, 8);

  Start_7_out1_8 <= to_signed(16#0A#, 8);

  
  Switch7_out1_9 <= Start_6_out1_8 WHEN Bit_Slice7_out1_5 = '0' ELSE
      Start_7_out1_8;

  
  Switch6_out1_8 <= Switch5_out1_8 WHEN Logical_Operator3_out1_5 = '0' ELSE
      Switch7_out1_9;

  
  Switch4_out1_8 <= Switch1_out1_11 WHEN Logical_Operator1_out1_13 = '0' ELSE
      Switch6_out1_8;

  
  Switch1_out1_12 <= Switch4_out1_7 WHEN Logical_Operator6_out1_3 = '0' ELSE
      Switch4_out1_8;

  Start_out1_9 <= to_signed(16#09#, 8);

  Start_1_out1_9 <= to_signed(16#08#, 8);

  
  Switch_out1_14 <= Start_out1_9 WHEN Bit_Slice_out1_4 = '0' ELSE
      Start_1_out1_9;

  Start_2_out1_9 <= to_signed(16#07#, 8);

  Start_3_out1_9 <= to_signed(16#06#, 8);

  
  Switch2_out1_11 <= Start_2_out1_9 WHEN Bit_Slice2_out1_4 = '0' ELSE
      Start_3_out1_9;

  
  Switch1_out1_13 <= Switch_out1_14 WHEN Logical_Operator4_out1_3 = '0' ELSE
      Switch2_out1_11;

  Start_4_out1_9 <= to_signed(16#05#, 8);

  Start_5_out1_9 <= to_signed(16#04#, 8);

  
  Switch5_out1_9 <= Start_4_out1_9 WHEN Bit_Slice5_out1_4 = '0' ELSE
      Start_5_out1_9;

  Start_6_out1_9 <= to_signed(16#03#, 8);

  Start_7_out1_9 <= to_signed(16#02#, 8);

  
  Switch7_out1_10 <= Start_6_out1_9 WHEN Bit_Slice7_out1_4 = '0' ELSE
      Start_7_out1_9;

  
  Switch6_out1_9 <= Switch5_out1_9 WHEN Logical_Operator3_out1_4 = '0' ELSE
      Switch7_out1_10;

  
  Switch4_out1_9 <= Switch1_out1_13 WHEN Logical_Operator1_out1_12 = '0' ELSE
      Switch6_out1_9;

  alpha56_out1 <= to_signed(16#01#, 8);

  alpha57_out1 <= to_signed(16#00#, 8);

  
  Switch7_out1_11 <= alpha56_out1 WHEN Bit_Slice9_out1 = '0' ELSE
      alpha57_out1;

  
  Switch3_out1 <= Switch4_out1_9 WHEN Logical_Operator3_out1_3 = '0' ELSE
      Switch7_out1_11;

  
  Switch4_out1_10 <= Switch1_out1_12 WHEN Logical_Operator4_out1_4 = '0' ELSE
      Switch3_out1;

  
  Switch5_out1_10 <= Switch34_out1_1 WHEN Logical_Operator5_out1_8 = '0' ELSE
      Switch4_out1_10;

  DTC_out1_13 <= unsigned(Switch5_out1_10);

  alpha0_out1_2 <= '0';

  bitsll_out1 <= BitSlice1_out1_11 sll to_integer(DTC_out1_13);

  BitSlice2_out1_1 <= bitsll_out1(55 DOWNTO 32);

  Bit_Concat_out1_23 <= alpha0_out1_2 & BitSlice2_out1_1;

  BitSlice_out1_14 <= Bit_Concat_out1_23(0);

  BitSlice1_out1_12 <= Bit_Concat_out1_23(1);

  LogicalOperator1_out1 <= BitSlice1_out1_12 OR bitsliceget_mant_norm_mant_no_out1;

  LogicalOperator_out1 <= BitSlice_out1_14 AND LogicalOperator1_out1;

  constant1_out1_13 <= to_unsigned(16#0000002#, 25);

  Add1_out1 <= Bit_Concat_out1_23 + constant1_out1_13;

  
  if_bitget_Mant_tmp_1_0_out1 <= Bit_Concat_out1_23 WHEN LogicalOperator_out1 = '0' ELSE
      Add1_out1;

  BitSlice2_out1_2 <= if_bitget_Mant_tmp_1_0_out1(24);

  
  Compare_To_Constant_out1_1 <= '1' WHEN DTC_out1_13 = to_unsigned(16#39#, 8) ELSE
      '0';

  alpha80_out1 <= to_unsigned(16#88#, 8);

  subtract_out1 <= alpha80_out1 - DTC_out1_13;

  alpha80_1_out1 <= to_unsigned(16#00#, 8);

  
  Switch1_out1_14 <= subtract_out1 WHEN Compare_To_Constant_out1_1 = '0' ELSE
      alpha80_1_out1;

  constant_out1_12 <= to_unsigned(16#01#, 8);

  Add_out1_1 <= Switch1_out1_14 + constant_out1_12;

  
  switch_out1_15 <= Switch1_out1_14 WHEN BitSlice2_out1_2 = '0' ELSE
      Add_out1_1;

  C_out1_4 <= to_unsigned(16#FF#, 8);

  
  if_aSign_1_out1 <= aExponent WHEN aSign = '0' ELSE
      C_out1_4;

  C2_out1 <= to_unsigned(16#FF#, 8);

  
  if_aExponent_0_out1 <= if_aSign_1_out1 WHEN alphaaExponent_0_aMantissa_out1 = '0' ELSE
      C2_out1;

  
  Switch2_out1_12 <= switch_out1_15 WHEN Logical_Operator_out1 = '0' ELSE
      if_aExponent_0_out1;

  
  Switch6_out1_10 <= Constant3_out1_1 WHEN Constant1_out1 = '0' ELSE
      Switch2_out1_12;

  Constant2_out1_2 <= to_unsigned(16#000000#, 23);

  
  Compare_To_Zero_out1_1 <= '1' WHEN switch_out1_15 = to_unsigned(16#00#, 8) ELSE
      '0';

  Logical_Operator_out1_22 <= Compare_To_Zero_out1_1 OR BitSlice2_out1_2;

  BitSlice3_out1 <= if_bitget_Mant_tmp_1_0_out1(23 DOWNTO 1);

  C_out1_5 <= to_unsigned(16#000000#, 23);

  
  switch1_out1_15 <= BitSlice3_out1 WHEN Logical_Operator_out1_22 = '0' ELSE
      C_out1_5;

  C1_out1 <= to_unsigned(16#400000#, 23);

  
  if_aSign_1_1_out1 <= Switch_out1 WHEN aSign = '0' ELSE
      C1_out1;

  C3_out1 <= to_unsigned(16#000000#, 23);

  
  if_aExponent_0_1_out1 <= if_aSign_1_1_out1 WHEN alphaaExponent_0_aMantissa_out1 = '0' ELSE
      C3_out1;

  
  Switch3_out1_1 <= switch1_out1_15 WHEN Logical_Operator_out1 = '0' ELSE
      if_aExponent_0_1_out1;

  
  Switch5_out1_11 <= Constant2_out1_2 WHEN Constant1_out1 = '0' ELSE
      Switch3_out1_1;

  -- Combine FP sign, exponent, mantissa into 32 bit word
  nfp_out_pack <= Switch1_out1_5 & Switch6_out1_10 & Switch5_out1_11;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

