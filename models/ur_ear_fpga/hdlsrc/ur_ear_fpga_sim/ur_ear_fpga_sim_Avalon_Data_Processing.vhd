-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\ur_ear_fpga_sim_Avalon_Data_Processing.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_Avalon_Data_Processing
-- Source Path: ur_ear_fpga_sim/dataplane/Avalon Data Processing
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_Avalon_Data_Processing IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        enb_1_2048_1                      :   IN    std_logic;
        sink_data                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        rand_nums                         :   IN    std_logic_vector(63 DOWNTO 0);  -- double
        integration_time                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        randNum1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum5                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum6                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum7                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum8                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum9                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum10                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum11                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        randNum12                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        source_data                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
        spike_count_out                   :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        spike_valid_out                   :   OUT   std_logic
        );
END ur_ear_fpga_sim_Avalon_Data_Processing;


ARCHITECTURE rtl OF ur_ear_fpga_sim_Avalon_Data_Processing IS

  -- Component Declarations
  COMPONENT ur_ear_fpga_sim_nfp_convert_sfix_32_En28_to_single
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_nfp_convert_double2single
    PORT( nfp_in                          :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT ur_ear_fpga_sim_UR_EAR_FPGA
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          audio_input                     :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          rand_nums                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          integration_time                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          randNum1                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum2                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum3                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum4                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum5                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum6                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum7                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum8                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum9                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum10                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum11                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          randNum12                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          audio_output                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          spike_count                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
          spike_valid                     :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ur_ear_fpga_sim_nfp_convert_sfix_32_En28_to_single
    USE ENTITY work.ur_ear_fpga_sim_nfp_convert_sfix_32_En28_to_single(rtl);

  FOR ALL : ur_ear_fpga_sim_nfp_convert_double2single
    USE ENTITY work.ur_ear_fpga_sim_nfp_convert_double2single(rtl);

  FOR ALL : ur_ear_fpga_sim_UR_EAR_FPGA
    USE ENTITY work.ur_ear_fpga_sim_UR_EAR_FPGA(rtl);

  -- Signals
  SIGNAL Data_Type_Conversion_out1        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Data_Type_Conversion1_out1       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL UR_EAR_FPGA_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL UR_EAR_FPGA_out2                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL UR_EAR_FPGA_out3                 : std_logic;

BEGIN
  u_ur_ear_fpga_sim_dataplane_Avalon_Data_Processing_nfp_convert_sfix_32_En28_to_single : ur_ear_fpga_sim_nfp_convert_sfix_32_En28_to_single
    PORT MAP( nfp_in => sink_data,  -- sfix32_En28
              nfp_out => Data_Type_Conversion_out1  -- single
              );

  u_ur_ear_fpga_sim_dataplane_Avalon_Data_Processing_nfp_convert_double2single : ur_ear_fpga_sim_nfp_convert_double2single
    PORT MAP( nfp_in => rand_nums,  -- double
              nfp_out => Data_Type_Conversion1_out1  -- single
              );

  u_UR_EAR_FPGA : ur_ear_fpga_sim_UR_EAR_FPGA
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              audio_input => Data_Type_Conversion_out1,  -- single
              rand_nums => Data_Type_Conversion1_out1,  -- single
              integration_time => integration_time,  -- uint32
              randNum1 => randNum1,  -- single
              randNum2 => randNum2,  -- single
              randNum3 => randNum3,  -- single
              randNum4 => randNum4,  -- single
              randNum5 => randNum5,  -- single
              randNum6 => randNum6,  -- single
              randNum7 => randNum7,  -- single
              randNum8 => randNum8,  -- single
              randNum9 => randNum9,  -- single
              randNum10 => randNum10,  -- single
              randNum11 => randNum11,  -- single
              randNum12 => randNum12,  -- single
              audio_output => UR_EAR_FPGA_out1,  -- single
              spike_count => UR_EAR_FPGA_out2,  -- ufix18
              spike_valid => UR_EAR_FPGA_out3
              );

  spike_valid_out <= UR_EAR_FPGA_out3;

  source_data <= UR_EAR_FPGA_out1;

  spike_count_out <= UR_EAR_FPGA_out2;

END rtl;

