-- -------------------------------------------------------------
-- 
-- File Name: D:\NIH3Repo\simulink_models\models\ur_ear_fpga\hdlsrc\ur_ear_fpga_sim\filter_path\ur_ear_fpga_sim_filter_path_filter_path.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ur_ear_fpga_sim_filter_path_filter_path
-- Source Path: filter_path
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ur_ear_fpga_sim_filter_path_filter_path IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        enb_1_2048_1                      :   IN    std_logic;
        filter_path_in                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        rsigma                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        filter_path_out                   :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END ur_ear_fpga_sim_filter_path_filter_path;


ARCHITECTURE rtl OF ur_ear_fpga_sim_filter_path_filter_path IS

  -- Component Declarations
  COMPONENT c1_chirp_filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          rsigma                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          c1_chirp_in                     :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          c1_chirp_filter_out             :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT c2_wideband_filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          c2_wideband_in                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          c2_wideband_out                 :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT inner_hair_cell
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          ihc_c1_in                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          ihc_c2_in                       :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          ihc_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : c1_chirp_filter
    USE ENTITY work.ur_ear_fpga_sim_c1_chirp_filter_c1_chirp_filter(rtl);

  FOR ALL : c2_wideband_filter
    USE ENTITY work.ur_ear_fpga_sim_c2_wideband_filter_c2_wideband_filter(rtl);

  FOR ALL : inner_hair_cell
    USE ENTITY work.ur_ear_fpga_sim_inner_hair_cell_inner_hair_cell(rtl);

  -- Signals
  SIGNAL out_rsvd                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C2filterout                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Inner_Hair_Cell_out1             : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_C1_Chirp_Filter : c1_chirp_filter
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              rsigma => rsigma,  -- single
              c1_chirp_in => filter_path_in,  -- single
              c1_chirp_filter_out => out_rsvd  -- single
              );

  u_C2_Wideband_Filter : c2_wideband_filter
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_0 => enb_1_2048_0,
              c2_wideband_in => filter_path_in,  -- single
              c2_wideband_out => C2filterout  -- single
              );

  u_Inner_Hair_Cell : inner_hair_cell
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              ihc_c1_in => out_rsvd,  -- single
              ihc_c2_in => C2filterout,  -- single
              ihc_out => Inner_Hair_Cell_out1  -- single
              );

  filter_path_out <= Inner_Hair_Cell_out1;

END rtl;

