-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\control_path_sim\calc_tau\calc_tau_write_address_generator.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: calc_tau_write_address_generator
-- Source Path: calc_tau/write address generator
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY calc_tau_write_address_generator IS
  PORT( read_addr                         :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        delay                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        write_addr                        :   OUT   std_logic_vector(5 DOWNTO 0)  -- ufix6
        );
END calc_tau_write_address_generator;


ARCHITECTURE rtl OF calc_tau_write_address_generator IS

  -- Component Declarations
  COMPONENT calc_tau_nfp_convert_single_to_fix_16_En5
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          nfp_out                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : calc_tau_nfp_convert_single_to_fix_16_En5
    USE ENTITY work.calc_tau_nfp_convert_single_to_fix_16_En5(rtl);

  -- Signals
  SIGNAL Data_Type_Conversion_out1        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Data_Type_Conversion_out1_unsigned : unsigned(15 DOWNTO 0);  -- ufix16_En5
  SIGNAL read_addr_unsigned               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Subtract_stage2_add_cast         : signed(21 DOWNTO 0);  -- sfix22_En5
  SIGNAL Subtract_stage2_add_cast_1       : signed(21 DOWNTO 0);  -- sfix22_En5
  SIGNAL Subtract_op_stage2               : signed(21 DOWNTO 0);  -- sfix22_En5
  SIGNAL Constant_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Subtract_stage3_sub_cast         : signed(21 DOWNTO 0);  -- sfix22_En5
  SIGNAL Subtract_stage3_sub_temp         : signed(21 DOWNTO 0);  -- sfix22_En5
  SIGNAL Subtract_out1                    : unsigned(5 DOWNTO 0);  -- ufix6

BEGIN
  -- wrap on overflow is the desired behavior
  -- 
  -- Write the delay, delay in front of the read_addr (but subtract 1 due to RAM writes taking a cycle)

  u_calc_tau_write_address_generator_nfp_convert_single_to_fix_16_En5 : calc_tau_nfp_convert_single_to_fix_16_En5
    PORT MAP( nfp_in => delay,  -- ufix32
              nfp_out => Data_Type_Conversion_out1  -- ufix16
              );

  Data_Type_Conversion_out1_unsigned <= unsigned(Data_Type_Conversion_out1);

  read_addr_unsigned <= unsigned(read_addr);

  Subtract_stage2_add_cast <= signed(resize(Data_Type_Conversion_out1_unsigned, 22));
  Subtract_stage2_add_cast_1 <= signed(resize(read_addr_unsigned & '0' & '0' & '0' & '0' & '0', 22));
  Subtract_op_stage2 <= Subtract_stage2_add_cast + Subtract_stage2_add_cast_1;

  Constant_out1 <= to_unsigned(16#0001#, 16);

  Subtract_stage3_sub_cast <= signed(resize(Constant_out1 & '0' & '0' & '0' & '0' & '0', 22));
  Subtract_stage3_sub_temp <= Subtract_op_stage2 - Subtract_stage3_sub_cast;
  Subtract_out1 <= unsigned(Subtract_stage3_sub_temp(10 DOWNTO 5));

  write_addr <= std_logic_vector(Subtract_out1);

END rtl;

