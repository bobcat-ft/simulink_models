-- -------------------------------------------------------------
-- 
-- File Name: /mnt/data/trevor/research/NIH_SBIR_R44_DC015443/simulink_models/models/delay_and_sum_beamformer/hdlsrc/DSBF/DSBF_FilterTapSystolicPreAdd.vhd
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DSBF_FilterTapSystolicPreAdd
-- Source Path: DSBF/dataplane/Avalon Data Processing/delay signals/delay signal/CIC interpolation compensator/FilterTapSystolicPreAdd
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DSBF_FilterTapSystolicPreAdd IS
  PORT( clk                               :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        din_re                            :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        preAddIn                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        coeff                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        sumIn                             :   IN    std_logic_vector(49 DOWNTO 0);  -- sfix50_En43
        sumOut                            :   OUT   std_logic_vector(49 DOWNTO 0)  -- sfix50_En43
        );
END DSBF_FilterTapSystolicPreAdd;


ARCHITECTURE rtl OF DSBF_FilterTapSystolicPreAdd IS

  -- Signals
  SIGNAL din_re_signed                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL preAddIn_signed                  : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL coeff_signed                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL sumIn_signed                     : signed(49 DOWNTO 0);  -- sfix50_En43
  SIGNAL fTap_din1_reg1                   : signed(31 DOWNTO 0) := to_signed(0, 32);  -- sfix32
  SIGNAL fTap_din1_reg2                   : signed(31 DOWNTO 0) := to_signed(0, 32);  -- sfix32
  SIGNAL fTap_din1_reg3                   : signed(31 DOWNTO 0) := to_signed(0, 32);  -- sfix32
  SIGNAL fTap_din2_reg1                   : signed(31 DOWNTO 0) := to_signed(0, 32);  -- sfix32
  SIGNAL fTap_din2_reg2                   : signed(31 DOWNTO 0) := to_signed(0, 32);  -- sfix32
  SIGNAL fTap_addout_reg                  : signed(49 DOWNTO 0) := to_signed(0, 50);  -- sfix50
  SIGNAL fTap_coef_reg1                   : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16
  SIGNAL fTap_coef_reg2                   : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16
  SIGNAL fTap_addout_reg_next             : signed(49 DOWNTO 0);  -- sfix50_En43
  SIGNAL fTap_add_cast                    : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL fTap_add_cast_1                  : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL fTap_add_temp                    : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL fTap_mul_temp                    : signed(48 DOWNTO 0);  -- sfix49_En43
  SIGNAL fTap_add_cast_2                  : signed(49 DOWNTO 0);  -- sfix50_En43
  SIGNAL sumOut_tmp                       : signed(49 DOWNTO 0);  -- sfix50_En43

BEGIN
  din_re_signed <= signed(din_re);

  preAddIn_signed <= signed(preAddIn);

  coeff_signed <= signed(coeff);

  sumIn_signed <= signed(sumIn);

  -- FilterTapSystolicPreAddS
  fTap_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        fTap_addout_reg <= fTap_addout_reg_next;
        fTap_din1_reg3 <= fTap_din1_reg2;
        fTap_din1_reg2 <= fTap_din1_reg1;
        fTap_din1_reg1 <= din_re_signed;
        fTap_din2_reg2 <= fTap_din2_reg1;
        fTap_din2_reg1 <= preAddIn_signed;
        fTap_coef_reg2 <= fTap_coef_reg1;
        fTap_coef_reg1 <= coeff_signed;
      END IF;
    END IF;
  END PROCESS fTap_process;

  sumOut_tmp <= fTap_addout_reg;
  fTap_add_cast <= resize(fTap_din1_reg3, 33);
  fTap_add_cast_1 <= resize(fTap_din2_reg2, 33);
  fTap_add_temp <= fTap_add_cast + fTap_add_cast_1;
  fTap_mul_temp <= fTap_add_temp * fTap_coef_reg2;
  fTap_add_cast_2 <= resize(fTap_mul_temp, 50);
  fTap_addout_reg_next <= fTap_add_cast_2 + sumIn_signed;

  sumOut <= std_logic_vector(sumOut_tmp);

END rtl;

