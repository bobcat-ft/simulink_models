-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\wickh\Documents\NIH\simulink_models\models\fft_filters\hdlsrc\fft_filters\fft_filters_dataplane.vhd
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 7.94729e-11
-- Target subsystem base rate: 7.94729e-11
-- Explicit user oversample request: 2048x
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- avalon_source_data            ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fft_filters_dataplane
-- Source Path: fft_filters/dataplane
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.fft_filters_dataplane_pkg.ALL;

ENTITY fft_filters_dataplane IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        avalon_sink_data                  :   IN    vector_of_std_logic_vector24(0 TO 1);  -- sfix24_En23 [2]
        register_control_passthrough      :   IN    std_logic;
        register_control_filter_select    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        ce_out                            :   OUT   std_logic;
        avalon_source_data                :   OUT   vector_of_std_logic_vector24(0 TO 1)  -- sfix24_En23 [2]
        );
END fft_filters_dataplane;


ARCHITECTURE rtl OF fft_filters_dataplane IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT fft_filters_dataplane_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_2048_0                    :   OUT   std_logic;
          enb_1_2048_1                    :   OUT   std_logic;
          enb_1_262144_0                  :   OUT   std_logic;
          enb_1_262144_1                  :   OUT   std_logic;
          enb_1_262144_4097               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT fft_filters_FFT_Analysis_Synthesis_Left
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_262144_1                  :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_262144_0                  :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb_1_262144_4097               :   IN    std_logic;
          signal_in                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
          Passthrough                     :   IN    std_logic;
          filter_select                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          signal_out                      :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En23
          );
  END COMPONENT;

  COMPONENT fft_filters_FFT_Analysis_Synthesis_Right
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_262144_1                  :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          enb_1_262144_0                  :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb_1_262144_4097               :   IN    std_logic;
          signal_in                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
          Passthrough                     :   IN    std_logic;
          filter_select                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          signal_out                      :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En23
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : fft_filters_dataplane_tc
    USE ENTITY work.fft_filters_dataplane_tc(rtl);

  FOR ALL : fft_filters_FFT_Analysis_Synthesis_Left
    USE ENTITY work.fft_filters_FFT_Analysis_Synthesis_Left(rtl);

  FOR ALL : fft_filters_FFT_Analysis_Synthesis_Right
    USE ENTITY work.fft_filters_FFT_Analysis_Synthesis_Right(rtl);

  -- Signals
  SIGNAL enb_1_262144_1                   : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_2048_0                     : std_logic;
  SIGNAL enb_1_262144_0                   : std_logic;
  SIGNAL enb_1_2048_1                     : std_logic;
  SIGNAL enb_1_262144_4097                : std_logic;
  SIGNAL FFT_Analysis_Synthesis_Left_out1 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL FFT_Analysis_Synthesis_Right_out1 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL Mux_out1                         : vector_of_signed24(0 TO 1);  -- sfix24_En23 [2]
  SIGNAL t1_bypass_reg                    : vector_of_signed24(0 TO 1);  -- sfix24 [2]
  SIGNAL Mux_out1_1                       : vector_of_signed24(0 TO 1);  -- sfix24_En23 [2]

BEGIN
  u_dataplane_tc : fft_filters_dataplane_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_262144_0 => enb_1_262144_0,
              enb_1_262144_1 => enb_1_262144_1,
              enb_1_262144_4097 => enb_1_262144_4097
              );

  u_FFT_Analysis_Synthesis_Left : fft_filters_FFT_Analysis_Synthesis_Left
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_262144_1 => enb_1_262144_1,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_262144_0 => enb_1_262144_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_262144_4097 => enb_1_262144_4097,
              signal_in => avalon_sink_data(0),  -- sfix24_En23
              Passthrough => register_control_passthrough,
              filter_select => register_control_filter_select,  -- ufix2
              signal_out => FFT_Analysis_Synthesis_Left_out1  -- sfix24_En23
              );

  u_FFT_Analysis_Synthesis_Right : fft_filters_FFT_Analysis_Synthesis_Right
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_262144_1 => enb_1_262144_1,
              enb => enb,
              enb_1_2048_0 => enb_1_2048_0,
              enb_1_262144_0 => enb_1_262144_0,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_262144_4097 => enb_1_262144_4097,
              signal_in => avalon_sink_data(1),  -- sfix24_En23
              Passthrough => register_control_passthrough,
              filter_select => register_control_filter_select,  -- ufix2
              signal_out => FFT_Analysis_Synthesis_Right_out1  -- sfix24_En23
              );

  Mux_out1(0) <= signed(FFT_Analysis_Synthesis_Left_out1);
  Mux_out1(1) <= signed(FFT_Analysis_Synthesis_Right_out1);

  t1_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      t1_bypass_reg <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF rising_edge(clk) THEN
      IF enb_1_262144_1 = '1' THEN
        t1_bypass_reg <= Mux_out1;
      END IF;
    END IF;
  END PROCESS t1_bypass_process;

  
  Mux_out1_1 <= Mux_out1 WHEN enb_1_262144_1 = '1' ELSE
      t1_bypass_reg;

  outputgen: FOR k IN 0 TO 1 GENERATE
    avalon_source_data(k) <= std_logic_vector(Mux_out1_1(k));
  END GENERATE;

  ce_out <= enb_1_262144_1;

END rtl;

